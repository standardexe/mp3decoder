#pragma once

#include <array>
#include <map>

const float M_PI = 3.14159265359;

// ISO/IEC 11172-3 (2.4.2.3)
int table_layer[] = { -1, 3, 2, 1 };

// ISO/IEC 11172-3 (2.4.2.3)
int table_bitrate_per_layer[][16] = {
    {0, 32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448, -1},
    {0, 32, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384, -1},
    {0, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, -1}
};

float table_scale_factors[] = {
    2.00000000000000,
    1.58740105196820,
    1.25992104989487,
    1.00000000000000,
    0.79370052598410,
    0.62996052494744,
    0.50000000000000,
    0.39685026299205,
    0.31498026247372,
    0.25000000000000,
    0.19842513149602,
    0.15749013123686,
    0.12500000000000,
    0.09921256574801,
    0.07874506561843,
    0.06250000000000,
    0.04960628287401,
    0.03937253280921,
    0.03125000000000,
    0.02480314143700,
    0.01968626640461,
    0.01562500000000,
    0.01240157071850,
    0.00984313320230,
    0.00781250000000,
    0.00620078535925,
    0.00492156660115,
    0.00390625000000,
    0.00310039267963,
    0.00246078330058,
    0.00195312500000,
    0.00155019633981,
    0.00123039165029,
    0.00097656250000,
    0.00077509816991,
    0.00061519582514,
    0.00048828125000,
    0.00038754908495,
    0.00030759791257,
    0.00024414062500,
    0.00019377454248,
    0.00015379895629,
    0.00012207031250,
    0.00009688727124,
    0.00007689947814,
    0.00006103515625,
    0.00004844363562,
    0.00003844973907,
    0.00003051757813,
    0.00002422181781,
    0.00001922486954,
    0.00001525878906,
    0.00001211090890,
    0.00000961243477,
    0.00000762939453,
    0.00000605545445,
    0.00000480621738,
    0.00000381469727,
    0.00000302772723,
    0.00000240310869,
    0.00000190734863,
    0.00000151386361,
    0.00000120155435,
};

// ISO/IEC 11172-3 (2.4.2.3)
int table_samplerate[] = { 44100, 48000, 32000, -1 };

// ISO/IEC 11172-3 (2.4.2.3)
int table_bounds[] = { 4, 8, 12, 16 };

// ISO/IEC 11172-3 (2.4.2.5)
int table_allocation[] = { 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, -1 };

// ISO/IEC 11172-3 (Table B.3)
float table_window[] = {
    0.000000000,
    -0.000015259,
    -0.000015259,
    -0.000015259,
    -0.000015259,
    -0.000015259,
    -0.000015259,
    -0.000030518,
    -0.000030518,
    -0.000030518,
    -0.000030518,
    -0.000045776,
    -0.000045776,
    -0.000061035,
    -0.000061035,
    -0.000076294,
    -0.000076294,
    -0.000091553,
    -0.000106812,
    -0.000106812,
    -0.000122070,
    -0.000137329,
    -0.000152588,
    -0.000167847,
    -0.000198364,
    -0.000213623,
    -0.000244141,
    -0.000259399,
    -0.000289917,
    -0.000320435,
    -0.000366211,
    -0.000396729,
    -0.000442505,
    -0.000473022,
    -0.000534058,
    -0.000579834,
    -0.000625610,
    -0.000686646,
    -0.000747681,
    -0.000808716,
    -0.000885010,
    -0.000961304,
    -0.001037598,
    -0.001113892,
    -0.001205444,
    -0.001296997,
    -0.001388550,
    -0.001480103,
    -0.001586914,
    -0.001693726,
    -0.001785278,
    -0.001907349,
    -0.002014160,
    -0.002120972,
    -0.002243042,
    -0.002349854,
    -0.002456665,
    -0.002578735,
    -0.002685547,
    -0.002792358,
    -0.002899170,
    -0.002990723,
    -0.003082275,
    -0.003173828,
    0.003250122,
    0.003326416,
    0.003387451,
    0.003433228,
    0.003463745,
    0.003479004,
    0.003479004,
    0.003463745,
    0.003417969,
    0.003372192,
    0.003280640,
    0.003173828,
    0.003051758,
    0.002883911,
    0.002700806,
    0.002487183,
    0.002227783,
    0.001937866,
    0.001617432,
    0.001266479,
    0.000869751,
    0.000442505,
    -0.000030518,
    -0.000549316,
    -0.001098633,
    -0.001693726,
    -0.002334595,
    -0.003005981,
    -0.003723145,
    -0.004486084,
    -0.005294800,
    -0.006118774,
    -0.007003784,
    -0.007919312,
    -0.008865356,
    -0.009841919,
    -0.010848999,
    -0.011886597,
    -0.012939453,
    -0.014022827,
    -0.015121460,
    -0.016235352,
    -0.017349243,
    -0.018463135,
    -0.019577026,
    -0.020690918,
    -0.021789551,
    -0.022857666,
    -0.023910522,
    -0.024932861,
    -0.025909424,
    -0.026840210,
    -0.027725220,
    -0.028533936,
    -0.029281616,
    -0.029937744,
    -0.030532837,
    -0.031005859,
    -0.031387329,
    -0.031661987,
    -0.031814575,
    -0.031845093,
    -0.031738281,
    -0.031478882,
    0.031082153,
    0.030517578,
    0.029785156,
    0.028884888,
    0.027801514,
    0.026535034,
    0.025085449,
    0.023422241,
    0.021575928,
    0.019531250,
    0.017257690,
    0.014801025,
    0.012115479,
    0.009231567,
    0.006134033,
    0.002822876,
    -0.000686646,
    -0.004394531,
    -0.008316040,
    -0.012420654,
    -0.016708374,
    -0.021179199,
    -0.025817871,
    -0.030609131,
    -0.035552979,
    -0.040634155,
    -0.045837402,
    -0.051132202,
    -0.056533813,
    -0.061996460,
    -0.067520142,
    -0.073059082,
    -0.078628540,
    -0.084182739,
    -0.089706421,
    -0.095169067,
    -0.100540161,
    -0.105819702,
    -0.110946655,
    -0.115921021,
    -0.120697021,
    -0.125259399,
    -0.129562378,
    -0.133590698,
    -0.137298584,
    -0.140670776,
    -0.143676758,
    -0.146255493,
    -0.148422241,
    -0.150115967,
    -0.151306152,
    -0.151962280,
    -0.152069092,
    -0.151596069,
    -0.150497437,
    -0.148773193,
    -0.146362305,
    -0.143264771,
    -0.139450073,
    -0.134887695,
    -0.129577637,
    -0.123474121,
    -0.116577148,
    -0.108856201,
    0.100311279,
    0.090927124,
    0.080688477,
    0.069595337,
    0.057617187,
    0.044784546,
    0.031082153,
    0.016510010,
    0.001068115,
    -0.015228271,
    -0.032379150,
    -0.050354004,
    -0.069168091,
    -0.088775635,
    -0.109161377,
    -0.130310059,
    -0.152206421,
    -0.174789429,
    -0.198059082,
    -0.221984863,
    -0.246505737,
    -0.271591187,
    -0.297210693,
    -0.323318481,
    -0.349868774,
    -0.376800537,
    -0.404083252,
    -0.431655884,
    -0.459472656,
    -0.487472534,
    -0.515609741,
    -0.543823242,
    -0.572036743,
    -0.600219727,
    -0.628295898,
    -0.656219482,
    -0.683914185,
    -0.711318970,
    -0.738372803,
    -0.765029907,
    -0.791213989,
    -0.816864014,
    -0.841949463,
    -0.866363525,
    -0.890090942,
    -0.913055420,
    -0.935195923,
    -0.956481934,
    -0.976852417,
    -0.996246338,
    -1.014617920,
    -1.031936646,
    -1.048156738,
    -1.063217163,
    -1.077117920,
    -1.089782715,
    -1.101211548,
    -1.111373901,
    -1.120223999,
    -1.127746582,
    -1.133926392,
    -1.138763428,
    -1.142211914,
    -1.144287109,
    1.144989014,
    1.144287109,
    1.142211914,
    1.138763428,
    1.133926392,
    1.127746582,
    1.120223999,
    1.111373901,
    1.101211548,
    1.089782715,
    1.077117920,
    1.063217163,
    1.048156738,
    1.031936646,
    1.014617920,
    0.996246338,
    0.976852417,
    0.956481934,
    0.935195923,
    0.913055420,
    0.890090942,
    0.866363525,
    0.841949463,
    0.816864014,
    0.791213989,
    0.765029907,
    0.738372803,
    0.711318970,
    0.683914185,
    0.656219482,
    0.628295898,
    0.600219727,
    0.572036743,
    0.543823242,
    0.515609741,
    0.487472534,
    0.459472656,
    0.431655884,
    0.404083252,
    0.376800537,
    0.349868774,
    0.323318481,
    0.297210693,
    0.271591187,
    0.246505737,
    0.221984863,
    0.198059082,
    0.174789429,
    0.152206421,
    0.130310059,
    0.109161377,
    0.088775635,
    0.069168091,
    0.050354004,
    0.032379150,
    0.015228271,
    -0.001068115,
    -0.016510010,
    -0.031082153,
    -0.044784546,
    -0.057617187,
    -0.069595337,
    -0.080688477,
    -0.090927124,
    0.100311279,
    0.108856201,
    0.116577148,
    0.123474121,
    0.129577637,
    0.134887695,
    0.139450073,
    0.143264771,
    0.146362305,
    0.148773193,
    0.150497437,
    0.151596069,
    0.152069092,
    0.151962280,
    0.151306152,
    0.150115967,
    0.148422241,
    0.146255493,
    0.143676758,
    0.140670776,
    0.137298584,
    0.133590698,
    0.129562378,
    0.125259399,
    0.120697021,
    0.115921021,
    0.110946655,
    0.105819702,
    0.100540161,
    0.095169067,
    0.089706421,
    0.084182739,
    0.078628540,
    0.073059082,
    0.067520142,
    0.061996460,
    0.056533813,
    0.051132202,
    0.045837402,
    0.040634155,
    0.035552979,
    0.030609131,
    0.025817871,
    0.021179199,
    0.016708374,
    0.012420654,
    0.008316040,
    0.004394531,
    0.000686646,
    -0.002822876,
    -0.006134033,
    -0.009231567,
    -0.012115479,
    -0.014801025,
    -0.017257690,
    -0.019531250,
    -0.021575928,
    -0.023422241,
    -0.025085449,
    -0.026535034,
    -0.027801514,
    -0.028884888,
    -0.029785156,
    -0.030517578,
    0.031082153,
    0.031478882,
    0.031738281,
    0.031845093,
    0.031814575,
    0.031661987,
    0.031387329,
    0.031005859,
    0.030532837,
    0.029937744,
    0.029281616,
    0.028533936,
    0.027725220,
    0.026840210,
    0.025909424,
    0.024932861,
    0.023910522,
    0.022857666,
    0.021789551,
    0.020690918,
    0.019577026,
    0.018463135,
    0.017349243,
    0.016235352,
    0.015121460,
    0.014022827,
    0.012939453,
    0.011886597,
    0.010848999,
    0.009841919,
    0.008865356,
    0.007919312,
    0.007003784,
    0.006118774,
    0.005294800,
    0.004486084,
    0.003723145,
    0.003005981,
    0.002334595,
    0.001693726,
    0.001098633,
    0.000549316,
    0.000030518,
    -0.000442505,
    -0.000869751,
    -0.001266479,
    -0.001617432,
    -0.001937866,
    -0.002227783,
    -0.002487183,
    -0.002700806,
    -0.002883911,
    -0.003051758,
    -0.003173828,
    -0.003280640,
    -0.003372192,
    -0.003417969,
    -0.003463745,
    -0.003479004,
    -0.003479004,
    -0.003463745,
    -0.003433228,
    -0.003387451,
    -0.003326416,
    0.003250122,
    0.003173828,
    0.003082275,
    0.002990723,
    0.002899170,
    0.002792358,
    0.002685547,
    0.002578735,
    0.002456665,
    0.002349854,
    0.002243042,
    0.002120972,
    0.002014160,
    0.001907349,
    0.001785278,
    0.001693726,
    0.001586914,
    0.001480103,
    0.001388550,
    0.001296997,
    0.001205444,
    0.001113892,
    0.001037598,
    0.000961304,
    0.000885010,
    0.000808716,
    0.000747681,
    0.000686646,
    0.000625610,
    0.000579834,
    0.000534058,
    0.000473022,
    0.000442505,
    0.000396729,
    0.000366211,
    0.000320435,
    0.000289917,
    0.000259399,
    0.000244141,
    0.000213623,
    0.000198364,
    0.000167847,
    0.000152588,
    0.000137329,
    0.000122070,
    0.000106812,
    0.000106812,
    0.000091553,
    0.000076294,
    0.000076294,
    0.000061035,
    0.000061035,
    0.000045776,
    0.000045776,
    0.000030518,
    0.000030518,
    0.000030518,
    0.000030518,
    0.000015259,
    0.000015259,
    0.000015259,
    0.000015259,
    0.000015259,
    0.000015259
};

// ISO/IEC 11172-3 (Table B.2a)
const int layer_II_quantizations_a_sblimit = 27;
int layer_II_quantizations_a_nbal[] = { 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 0, 0, 0, 0, 0 };
int layer_II_quantizations_a[32][16] = {
    {0, 3, 7, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767, 65535},
    {0, 3, 7, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767, 65535},
    {0, 3, 7, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767, 65535},
    {0, 3, 5,  7,  9, 15,  31,  63, 127,  255,  511, 1023, 2047,  4095,  8191, 65535},
    {0, 3, 5,  7,  9, 15,  31,  63, 127,  255,  511, 1023, 2047,  4095,  8191, 65535},
    {0, 3, 5,  7,  9, 15,  31,  63, 127,  255,  511, 1023, 2047,  4095,  8191, 65535},
    {0, 3, 5,  7,  9, 15,  31,  63, 127,  255,  511, 1023, 2047,  4095,  8191, 65535},
    {0, 3, 5,  7,  9, 15,  31,  63, 127,  255,  511, 1023, 2047,  4095,  8191, 65535},
    {0, 3, 5,  7,  9, 15,  31,  63, 127,  255,  511, 1023, 2047,  4095,  8191, 65535},
    {0, 3, 5,  7,  9, 15,  31,  63, 127,  255,  511, 1023, 2047,  4095,  8191, 65535},
    {0, 3, 5,  7,  9, 15,  31,  63, 127,  255,  511, 1023, 2047,  4095,  8191, 65535},
    {0, 3, 5,  7,  9, 15,  31, 65535, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
    {0, 3, 5,  7,  9, 15,  31, 65535, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
    {0, 3, 5,  7,  9, 15,  31, 65535, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
    {0, 3, 5,  7,  9, 15,  31, 65535, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
    {0, 3, 5,  7,  9, 15,  31, 65535, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
    {0, 3, 5,  7,  9, 15,  31, 65535, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
    {0, 3, 5,  7,  9, 15,  31, 65535, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
    {0, 3, 5,  7,  9, 15,  31, 65535, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
    {0, 3, 5,  7,  9, 15,  31, 65535, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
    {0, 3, 5,  7,  9, 15,  31, 65535, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
    {0, 3, 5,  7,  9, 15,  31, 65535, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
    {0, 3, 5, 65535, -1, -1, -1,  -1, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
    {0, 3, 5, 65535, -1, -1, -1,  -1, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
    {0, 3, 5, 65535, -1, -1, -1,  -1, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
    {0, 3, 5, 65535, -1, -1, -1,  -1, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
    {0, -1, -1,  -1, -1, -1, -1,  -1, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
    {0, -1, -1,  -1, -1, -1, -1,  -1, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
    {0, -1, -1,  -1, -1, -1, -1,  -1, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
    {0, -1, -1,  -1, -1, -1, -1,  -1, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
    {0, -1, -1,  -1, -1, -1, -1,  -1, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
};

// ISO/IEC 11172-3 (Table B.2b)
const int layer_II_quantizations_b_sblimit = 30;
int layer_II_quantizations_b_nbal[] = { 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 0, 0 };
int layer_II_quantizations_b[32][16] = {
    {0, 3, 7, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767, 65535},
    {0, 3, 7, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767, 65535},
    {0, 3, 7, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767, 65535},
    {0, 3, 5,  7,  9, 15,  31,  63, 127,  255,  511, 1023, 2047,  4095,  8191, 65535},
    {0, 3, 5,  7,  9, 15,  31,  63, 127,  255,  511, 1023, 2047,  4095,  8191, 65535},
    {0, 3, 5,  7,  9, 15,  31,  63, 127,  255,  511, 1023, 2047,  4095,  8191, 65535},
    {0, 3, 5,  7,  9, 15,  31,  63, 127,  255,  511, 1023, 2047,  4095,  8191, 65535},
    {0, 3, 5,  7,  9, 15,  31,  63, 127,  255,  511, 1023, 2047,  4095,  8191, 65535},
    {0, 3, 5,  7,  9, 15,  31,  63, 127,  255,  511, 1023, 2047,  4095,  8191, 65535},
    {0, 3, 5,  7,  9, 15,  31,  63, 127,  255,  511, 1023, 2047,  4095,  8191, 65535},
    {0, 3, 5,  7,  9, 15,  31,  63, 127,  255,  511, 1023, 2047,  4095,  8191, 65535},
    {0, 3, 5,  7,  9, 15,  31, 65535, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
    {0, 3, 5,  7,  9, 15,  31, 65535, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
    {0, 3, 5,  7,  9, 15,  31, 65535, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
    {0, 3, 5,  7,  9, 15,  31, 65535, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
    {0, 3, 5,  7,  9, 15,  31, 65535, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
    {0, 3, 5,  7,  9, 15,  31, 65535, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
    {0, 3, 5,  7,  9, 15,  31, 65535, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
    {0, 3, 5,  7,  9, 15,  31, 65535, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
    {0, 3, 5,  7,  9, 15,  31, 65535, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
    {0, 3, 5,  7,  9, 15,  31, 65535, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
    {0, 3, 5,  7,  9, 15,  31, 65535, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
    {0, 3, 5,  7,  9, 15,  31, 65535, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
    {0, 3, 5, 65535, -1, -1, -1,  -1, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
    {0, 3, 5, 65535, -1, -1, -1,  -1, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
    {0, 3, 5, 65535, -1, -1, -1,  -1, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
    {0, 3, 5, 65535, -1, -1, -1,  -1, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
    {0, 3, 5, 65535, -1, -1, -1,  -1, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
    {0, 3, 5, 65535, -1, -1, -1,  -1, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
    {0, 3, 5, 65535, -1, -1, -1,  -1, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
    {0, -1, -1,  -1, -1, -1, -1,  -1, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
    {0, -1, -1,  -1, -1, -1, -1,  -1, -1,  -1,   -1,   -1,   -1,    -1,    -1,    -1},
};

// ISO/IEC 11172-3 (Table B.2c)
const int layer_II_quantizations_c_sblimit = 8;
int layer_II_quantizations_c_nbal[] = { 4, 4, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
int layer_II_quantizations_c[32][16] = {
    {0, 3, 5, 9, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767},
    {0, 3, 5, 9, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767},
    {0, 3, 5, 9, 15, 31, 63, 127,  -1,  -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, 3, 5, 9, 15, 31, 63, 127,  -1,  -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, 3, 5, 9, 15, 31, 63, 127,  -1,  -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, 3, 5, 9, 15, 31, 63, 127,  -1,  -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, 3, 5, 9, 15, 31, 63, 127,  -1,  -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
};

// ISO/IEC 11172-3 (Table B.2d)
const int layer_II_quantizations_d_sblimit = 12;
int layer_II_quantizations_d_nbal[] = { 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
int layer_II_quantizations_d[32][16] = {
    {0, 3, 5, 9, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767},
    {0, 3, 5, 9, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767},
    {0, 3, 5, 9, 15, 31, 63, 127,  -1,  -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, 3, 5, 9, 15, 31, 63, 127,  -1,  -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, 3, 5, 9, 15, 31, 63, 127,  -1,  -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, 3, 5, 9, 15, 31, 63, 127,  -1,  -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, 3, 5, 9, 15, 31, 63, 127,  -1,  -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, 3, 5, 9, 15, 31, 63, 127,  -1,  -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, 3, 5, 9, 15, 31, 63, 127,  -1,  -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, 3, 5, 9, 15, 31, 63, 127,  -1,  -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, 3, 5, 9, 15, 31, 63, 127,  -1,  -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, 3, 5, 9, 15, 31, 63, 127,  -1,  -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, 3, 5, 9, 15, 31, 63, 127,  -1,  -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
    {0, -1, -1, -1, -1, -1, -1, -1, -1, -1,   -1,   -1,   -1,   -1,    -1,    -1},
};

// ISO/IEC 11172-3 (Table B.4)
float layer_II_quantization_class_C[] = {
    1.33333333333,
    1.60000000000,
    1.14285714286,
    1.77777777777,
    1.06666666666,
    1.03225806452,
    1.01587301587,
    1.00787401575,
    1.00392156863,
    1.00195694716,
    1.00097751711,
    1.00048851979,
    1.00024420024,
    1.00012208522,
    1.00006103888,
    1.00003051851,
    1.00001525902
};

// ISO/IEC 11172-3 (Table B.4)
float layer_II_quantization_class_D[] = {
    0.50000000000,
    0.50000000000,
    0.25000000000,
    0.50000000000,
    0.12500000000,
    0.06250000000,
    0.03125000000,
    0.01562500000,
    0.00781250000,
    0.00390625000,
    0.00195312500,
    0.00097656250,
    0.00048828125,
    0.00024414063,
    0.00012207031,
    0.00006103516,
    0.00003051758
};

// ISO/IEC 11172-3 (Table B.4)
int layer_II_quantization_class_num_steps[] = {
    3, 5, 7, 9, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767, 65535
};

// ISO/IEC 11172-3 (Table B.4)
bool layer_II_quantization_class_group[] = {
    true, true, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false
};

// ISO/IEC 11172-3 (Table B.4)
int layer_II_quantization_class_samples_per_cw[] = {
    3, 3, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
};

// ISO/IEC 11172-3 (Table B.4)
int layer_II_quantization_class_bits_per_cw[] = {
    5, 7, 3, 10, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
};


// ISO/IEC 11172-3 (2.4.2.7)
int layer_III_scalefac_compress_slen1[] = { 0, 0, 0, 0, 3, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4 };
int layer_III_scalefac_compress_slen2[] = { 0, 1, 2, 3, 0, 1, 2, 3, 1, 2, 3, 1, 2, 3, 2, 3 };

// ISO/IEC 11172-3 (Table B.6)
std::array<int, 22> layer_III_pretab = {{
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 2, 0
}};

struct ScaleFactorBand {
    size_t width;
    size_t start;
    size_t end;
};

template<size_t N>
constexpr std::array<ScaleFactorBand, 3*N> MakeShortScaleFactorBandArray(std::array<size_t, N> sizes) {
    std::array<ScaleFactorBand, 3*N> result;
    size_t start = 0;

    for (size_t i = 0; i < N; i++) {
        result[3 * i + 0] = { sizes[i], start, start + sizes[i] - 1 };
        start += sizes[i];
        result[3 * i + 1] = { sizes[i], start, start + sizes[i] - 1 };
        start += sizes[i];
        result[3 * i + 2] = { sizes[i], start, start + sizes[i] - 1 };
        start += sizes[i];
    }

    return result;
}

template<size_t N>
constexpr std::array<ScaleFactorBand, N> MakeLongScaleFactorBandArray(std::array<size_t, N> sizes) {
    std::array<ScaleFactorBand, N> result;
    size_t start = 0;

    for (size_t i = 0; i < N; i++) {
        result[i] = { sizes[i], start, start + sizes[i] - 1 };
        start += sizes[i];
    }

    return result;

}

std::map< int, std::array<ScaleFactorBand, 39> > ScaleFactorBandsShort = {
    {
        32000,
        MakeShortScaleFactorBandArray<13>({{ 4, 4, 4, 4, 6, 8, 12, 16, 20, 26, 34, 42, 12 }})
    },
    {
        44100,
        MakeShortScaleFactorBandArray<13>({{ 4, 4, 4, 4, 6, 8, 10, 12, 14, 18, 22, 30, 56 }})
    },
    {
        48000,
        MakeShortScaleFactorBandArray<13>({{ 4, 4, 4, 4, 6, 6, 10, 12, 14, 16, 20, 26, 66 }})
    }
};

std::map< int, std::array<ScaleFactorBand, 23> > ScaleFactorBandsLong = {
    {
        32000,
        MakeLongScaleFactorBandArray<23>({{ 4, 4, 4, 4, 4, 4, 6, 6, 8, 10, 12, 16, 20, 24, 30, 38, 46, 56, 68, 84, 102, 25, 0 }})
    },
    {
        44100,
        MakeLongScaleFactorBandArray<23>({{ 4, 4, 4, 4, 4, 4, 6, 6, 8, 8, 10, 12, 16, 20, 24, 28, 34, 42, 50, 54, 76, 158, 0 }})
    },
    {
        48000,
        MakeLongScaleFactorBandArray<23>({{ 4, 4, 4, 4, 4, 4, 6, 6, 6, 8, 10, 12, 16, 18, 22, 28, 34, 40, 46, 54, 54, 192, 0 }})
    }
};

struct HuffmanEntry2 {
    int x;
    int y;
    int hlen;
    int hcod;
};

struct HuffmanEntry4 {
    int v;
    int w;
    int x;
    int y;
    int hlen;
    int hcod;
};

const int SIZE_HUFFMAN_TABLE_A = 16;
const HuffmanEntry4 huffman_table_A[] = {
    {0, 0, 0, 0, 1, 0b1},
    {0, 0, 0, 1, 4, 0b0101},
    {0, 0, 1, 0, 4, 0b0100},
    {0, 0, 1, 1, 5, 0b00101},
    {0, 1, 0, 0, 4, 0b0110},
    {0, 1, 0, 1, 6, 0b000101},
    {0, 1, 1, 0, 5, 0b00100},
    {0, 1, 1, 1, 6, 0b000100},
    {1, 0, 0, 0, 4, 0b0111},
    {1, 0, 0, 1, 5, 0b00011},
    {1, 0, 1, 0, 5, 0b00110},
    {1, 0, 1, 1, 6, 0b000000},
    {1, 1, 0, 0, 5, 0b00111},
    {1, 1, 0, 1, 6, 0b000010},
    {1, 1, 1, 0, 6, 0b000011},
    {1, 1, 1, 1, 6, 0b000001}
};

const int SIZE_HUFFMAN_TABLE_B = 16;
const HuffmanEntry4 huffman_table_B[] = {
    {0, 0, 0, 0, 4, 0b1111},
    {0, 0, 0, 1, 4, 0b1110},
    {0, 0, 1, 0, 4, 0b1101},
    {0, 0, 1, 1, 4, 0b1100},
    {0, 1, 0, 0, 4, 0b1011},
    {0, 1, 0, 1, 4, 0b1010},
    {0, 1, 1, 0, 4, 0b1001},
    {0, 1, 1, 1, 4, 0b1000},
    {1, 0, 0, 0, 4, 0b0111},
    {1, 0, 0, 1, 4, 0b0110},
    {1, 0, 1, 0, 4, 0b0101},
    {1, 0, 1, 1, 4, 0b0100},
    {1, 1, 0, 0, 4, 0b0011},
    {1, 1, 0, 1, 4, 0b0010},
    {1, 1, 1, 0, 4, 0b0001},
    {1, 1, 1, 1, 4, 0b0000}
};

const int SIZE_HUFFMAN_TABLE_0 = 1;
const int LINBITS_HUFFMAN_TABLE_0 = 0;
const HuffmanEntry2 huffman_table_0[] = {
    { 0, 0, 0, 0b0 }
};

const int SIZE_HUFFMAN_TABLE_1 = 4;
const int LINBITS_HUFFMAN_TABLE_1 = 0;
const HuffmanEntry2 huffman_table_1[] = {
    { 0, 0, 1, 0b1 },
    { 0, 1, 3, 0b001 },
    { 1, 0, 2, 0b01 },
    { 1, 1, 3, 0b000 }
};

const int SIZE_HUFFMAN_TABLE_2 = 9;
const int LINBITS_HUFFMAN_TABLE_2 = 0;
const HuffmanEntry2 huffman_table_2[] = {
    { 0, 0, 1, 0b1 },
    { 0, 1, 3, 0b010 },
    { 0, 2, 6, 0b000001 },
    { 1, 0, 3, 0b011 },
    { 1, 1, 3, 0b001 },
    { 1, 2, 5, 0b00001 },
    { 2, 0, 5, 0b00011 },
    { 2, 1, 5, 0b00010 },
    { 2, 2, 6, 0b000000 }
};

const int SIZE_HUFFMAN_TABLE_3 = 9;
const int LINBITS_HUFFMAN_TABLE_3 = 0;
const HuffmanEntry2 huffman_table_3[] = {
    { 0, 0, 2, 0b11 },
    { 0, 1, 2, 0b10 },
    { 0, 2, 6, 0b000001 },
    { 1, 0, 3, 0b001 },
    { 1, 1, 2, 0b01 },
    { 1, 2, 5, 0b00001 },
    { 2, 0, 5, 0b00011 },
    { 2, 1, 5, 0b00010 },
    { 2, 2, 6, 0b000000 }
};

const int SIZE_HUFFMAN_TABLE_5 = 16;
const int LINBITS_HUFFMAN_TABLE_5 = 0;
const HuffmanEntry2 huffman_table_5[] = {
    {0, 0, 1, 0b1},
    {0, 1, 3, 0b010},
    {0, 2, 6, 0b000110},
    {0, 3, 7, 0b0000101},
    {1, 0, 3, 0b011},
    {1, 1, 3, 0b001},
    {1, 2, 6, 0b000100},
    {1, 3, 7, 0b0000100},
    {2, 0, 6, 0b000111},
    {2, 1, 6, 0b000101},
    {2, 2, 7, 0b0000111},
    {2, 3, 8, 0b00000001},
    {3, 0, 7, 0b0000110},
    {3, 1, 6, 0b000001},
    {3, 2, 7, 0b0000001},
    {3, 3, 8, 0b00000000}
};

const int SIZE_HUFFMAN_TABLE_6 = 16;
const int LINBITS_HUFFMAN_TABLE_6 = 0;
const HuffmanEntry2 huffman_table_6[] = {
    {0, 0, 3, 0b111},
    {0, 1, 3, 0b011},
    {0, 2, 5, 0b00101},
    {0, 3, 7, 0b0000001},
    {1, 0, 3, 0b110},
    {1, 1, 2, 0b10},
    {1, 2, 4, 0b0011},
    {1, 3, 5, 0b00010},
    {2, 0, 4, 0b0101},
    {2, 1, 4, 0b0100},
    {2, 2, 5, 0b00100},
    {2, 3, 6, 0b000001},
    {3, 0, 6, 0b000011},
    {3, 1, 5, 0b00011},
    {3, 2, 6, 0b000010},
    {3, 3, 7, 0b0000000},
};

const int SIZE_HUFFMAN_TABLE_7 = 36;
const int LINBITS_HUFFMAN_TABLE_7 = 0;
const HuffmanEntry2 huffman_table_7[] = {
    {0, 0, 1, 0b1},
    {0, 1, 3, 0b010},
    {0, 2, 6, 0b001010},
    {0, 3, 8, 0b00010011},
    {0, 4, 8, 0b00010000},
    {0, 5, 9, 0b000001010},
    {1, 0, 3, 0b011},
    {1, 1, 4, 0b0011},
    {1, 2, 6, 0b000111},
    {1, 3, 7, 0b0001010},
    {1, 4, 7, 0b0000101},
    {1, 5, 8, 0b00000011},
    {2, 0, 6, 0b001011},
    {2, 1, 5, 0b00100},
    {2, 2, 7, 0b0001101},
    {2, 3, 8, 0b00010001},
    {2, 4, 8, 0b00001000},
    {2, 5, 9, 0b000000100},
    {3, 0, 7, 0b0001100},
    {3, 1, 7, 0b0001011},
    {3, 2, 8, 0b00010010},
    {3, 3, 9, 0b000001111},
    {3, 4, 9, 0b000001011},
    {3, 5, 9, 0b000000010},
    {4, 0, 7, 0b0000111},
    {4, 1, 7, 0b0000110},
    {4, 2, 8, 0b00001001},
    {4, 3, 9, 0b000001110},
    {4, 4, 9, 0b000000011},
    {4, 5, 10, 0b0000000001},
    {5, 0, 8, 0b00000110},
    {5, 1, 8, 0b00000100},
    {5, 2, 9, 0b000000101},
    {5, 3, 10, 0b0000000011},
    {5, 4, 10, 0b0000000010},
    {5, 5, 10, 0b0000000000},
};

const int SIZE_HUFFMAN_TABLE_8 = 36;
const int LINBITS_HUFFMAN_TABLE_8 = 0;
const HuffmanEntry2 huffman_table_8[] = {
    {0, 0, 2, 0b11},
    {0, 1, 3, 0b100},
    {0, 2, 6, 0b000110},
    {0, 3, 8, 0b00010010},
    {0, 4, 8, 0b00001100},
    {0, 5, 9, 0b000000101},
    {1, 0, 3, 0b101},
    {1, 1, 2, 0b01},
    {1, 2, 4, 0b0010},
    {1, 3, 8, 0b00010000},
    {1, 4, 8, 0b00001001},
    {1, 5, 8, 0b00000011},
    {2, 0, 6, 0b000111},
    {2, 1, 4, 0b0011},
    {2, 2, 6, 0b000101},
    {2, 3, 8, 0b00001110},
    {2, 4, 8, 0b00000111},
    {2, 5, 9, 0b000000011},
    {3, 0, 8, 0b00010011},
    {3, 1, 8, 0b00010001},
    {3, 2, 8, 0b00001111},
    {3, 3, 9, 0b000001101},
    {3, 4, 9, 0b000001010},
    {3, 5, 10, 0b0000000100},
    {4, 0, 8, 0b00001101},
    {4, 1, 7, 0b0000101},
    {4, 2, 8, 0b00001000},
    {4, 3, 9, 0b000001011},
    {4, 4, 10, 0b0000000101},
    {4, 5, 10, 0b0000000001},
    {5, 0, 9, 0b000001100},
    {5, 1, 8, 0b00000100},
    {5, 2, 9, 0b000000100},
    {5, 3, 9, 0b000000001},
    {5, 4, 11, 0b00000000001},
    {5, 5, 11, 0b00000000000}
};

const int SIZE_HUFFMAN_TABLE_9 = 36;
const int LINBITS_HUFFMAN_TABLE_9 = 0;
const HuffmanEntry2 huffman_table_9[] = {
    {0, 0, 3, 0b111},
    {0, 1, 3, 0b101},
    {0, 2, 5, 0b01001},
    {0, 3, 6, 0b001110},
    {0, 4, 8, 0b00001111},
    {0, 5, 9, 0b000000111},
    {1, 0, 3, 0b110},
    {1, 1, 3, 0b100},
    {1, 2, 4, 0b0101},
    {1, 3, 5, 0b00101},
    {1, 4, 6, 0b000110},
    {1, 5, 8, 0b00000111},
    {2, 0, 4, 0b0111},
    {2, 1, 4, 0b0110},
    {2, 2, 5, 0b01000},
    {2, 3, 6, 0b001000},
    {2, 4, 7, 0b0001000},
    {2, 5, 8, 0b00000101},
    {3, 0, 6, 0b001111},
    {3, 1, 5, 0b00110},
    {3, 2, 6, 0b001001},
    {3, 3, 7, 0b0001010},
    {3, 4, 7, 0b0000101},
    {3, 5, 8, 0b00000001},
    {4, 0, 7, 0b0001011},
    {4, 1, 6, 0b000111},
    {4, 2, 7, 0b0001001},
    {4, 3, 7, 0b0000110},
    {4, 4, 8, 0b00000100},
    {4, 5, 9, 0b000000001},
    {5, 0, 8, 0b00001110},
    {5, 1, 7, 0b0000100},
    {5, 2, 8, 0b00000110},
    {5, 3, 8, 0b00000010},
    {5, 4, 9, 0b000000110},
    {5, 5, 9, 0b000000000}
};

const int SIZE_HUFFMAN_TABLE_10 = 64;
const int LINBITS_HUFFMAN_TABLE_10 = 0;
const HuffmanEntry2 huffman_table_10[] = {
    {0, 0, 1, 0b1},
    {0, 1, 3, 0b010},
    {0, 2, 6, 0b001010},
    {0, 3, 8, 0b00010111},
    {0, 4, 9, 0b000100011},
    {0, 5, 9, 0b000011110},
    {0, 6, 9, 0b000001100},
    {0, 7, 10, 0b0000010001},
    {1, 0, 3, 0b011},
    {1, 1, 4, 0b0011},
    {1, 2, 6, 0b001000},
    {1, 3, 7, 0b0001100},
    {1, 4, 8, 0b00010010},
    {1, 5, 9, 0b000010101},
    {1, 6, 8, 0b00001100},
    {1, 7, 8, 0b00000111},
    {2, 0, 6, 0b001011},
    {2, 1, 6, 0b001001},
    {2, 2, 7, 0b0001111},
    {2, 3, 8, 0b00010101},
    {2, 4, 9, 0b000100000},
    {2, 5, 10, 0b0000101000},
    {2, 6, 9, 0b000010011},
    {2, 7, 9, 0b000000110},
    {3, 0, 7, 0b0001110},
    {3, 1, 7, 0b0001101},
    {3, 2, 8, 0b00010110},
    {3, 3, 9, 0b000100010},
    {3, 4, 10, 0b0000101110},
    {3, 5, 10, 0b0000010111},
    {3, 6, 9, 0b000010010},
    {3, 7, 10, 0b0000000111},
    {4, 0, 8, 0b00010100},
    {4, 1, 8, 0b00010011},
    {4, 2, 9, 0b000100001},
    {4, 3, 10, 0b0000101111},
    {4, 4, 10, 0b0000011011},
    {4, 5, 10, 0b0000010110},
    {4, 6, 10, 0b0000001001},
    {4, 7, 10, 0b0000000011},
    {5, 0, 9, 0b000011111},
    {5, 1, 9, 0b000010110},
    {5, 2, 10, 0b0000101001},
    {5, 3, 10, 0b0000011010},
    {5, 4, 11, 0b00000010101},
    {5, 5, 11, 0b00000010100},
    {5, 6, 10, 0b0000000101},
    {5, 7, 11, 0b00000000011},
    {6, 0, 8, 0b00001110},
    {6, 1, 8, 0b00001101},
    {6, 2, 9, 0b000001010},
    {6, 3, 10, 0b0000001011},
    {6, 4, 10, 0b0000010000},
    {6, 5, 10, 0b0000000110},
    {6, 6, 11, 0b00000000101},
    {6, 7, 11, 0b00000000001},
    {7, 0, 9, 0b000001001},
    {7, 1, 8, 0b00001000},
    {7, 2, 9, 0b000000111},
    {7, 3, 10, 0b0000001000},
    {7, 4, 10, 0b0000000100},
    {7, 5, 11, 0b00000000100},
    {7, 6, 11, 0b00000000010},
    {7, 7, 11, 0b00000000000}
};

const int SIZE_HUFFMAN_TABLE_11 = 64;
const int LINBITS_HUFFMAN_TABLE_11 = 0;
const HuffmanEntry2 huffman_table_11[] = {
    {0, 0, 2, 0b11},
    {0, 1, 3, 0b100},
    {0, 2, 5, 0b01010},
    {0, 3, 7, 0b0011000},
    {0, 4, 8, 0b00100010},
    {0, 5, 9, 0b000100001},
    {0, 6, 8, 0b00010101},
    {0, 7, 9, 0b000001111},
    {1, 0, 3, 0b101},
    {1, 1, 3, 0b011},
    {1, 2, 4, 0b0100},
    {1, 3, 6, 0b001010},
    {1, 4, 8, 0b00100000},
    {1, 5, 8, 0b00010001},
    {1, 6, 7, 0b0001011},
    {1, 7, 8, 0b00001010},
    {2, 0, 5, 0b01011},
    {2, 1, 5, 0b00111},
    {2, 2, 6, 0b001101},
    {2, 3, 7, 0b0010010},
    {2, 4, 8, 0b00011110},
    {2, 5, 9, 0b000011111},
    {2, 6, 8, 0b00010100},
    {2, 7, 8, 0b00000101},
    {3, 0, 7, 0b0011001},
    {3, 1, 6, 0b001011},
    {3, 2, 7, 0b0010011},
    {3, 3, 9, 0b000111011},
    {3, 4, 8, 0b00011011},
    {3, 5, 10, 0b0000010010},
    {3, 6, 8, 0b00001100},
    {3, 7, 9, 0b000000101},
    {4, 0, 8, 0b00100011},
    {4, 1, 8, 0b00100001},
    {4, 2, 8, 0b00011111},
    {4, 3, 9, 0b000111010},
    {4, 4, 9, 0b000011110},
    {4, 5, 10, 0b0000010000},
    {4, 6, 9, 0b000000111},
    {4, 7, 10, 0b0000000101},
    {5, 0, 8, 0b00011100},
    {5, 1, 8, 0b00011010},
    {5, 2, 9, 0b000100000},
    {5, 3, 10, 0b0000010011},
    {5, 4, 10, 0b0000010001},
    {5, 5, 11, 0b00000001111},
    {5, 6, 10, 0b0000001000},
    {5, 7, 11, 0b00000001110},
    {6, 0, 8, 0b00001110},
    {6, 1, 7, 0b0001100},
    {6, 2, 7, 0b0001001},
    {6, 3, 8, 0b00001101},
    {6, 4, 9, 0b000001110},
    {6, 5, 10, 0b0000001001},
    {6, 6, 10, 0b0000000100},
    {6, 7, 10, 0b0000000001},
    {7, 0, 8, 0b00001011},
    {7, 1, 7, 0b0000100},
    {7, 2, 8, 0b00000110},
    {7, 3, 9, 0b000000110},
    {7, 4, 10, 0b0000000110},
    {7, 5, 10, 0b0000000011},
    {7, 6, 10, 0b0000000010},
    {7, 7, 10, 0b0000000000}
};

const int SIZE_HUFFMAN_TABLE_12 = 64;
const int LINBITS_HUFFMAN_TABLE_12 = 0;
const HuffmanEntry2 huffman_table_12[] = {
    {0, 0, 4, 0b1001},
    {0, 1, 3, 0b110},
    {0, 2, 5, 0b10000},
    {0, 3, 7, 0b0100001},
    {0, 4, 8, 0b00101001},
    {0, 5, 9, 0b000100111},
    {0, 6, 9, 0b000100110},
    {0, 7, 9, 0b000011010},
    {1, 0, 3, 0b111},
    {1, 1, 3, 0b101},
    {1, 2, 4, 0b0110},
    {1, 3, 5, 0b01001},
    {1, 4, 7, 0b0010111},
    {1, 5, 7, 0b0010000},
    {1, 6, 8, 0b00011010},
    {1, 7, 8, 0b00001011},
    {2, 0, 5, 0b10001},
    {2, 1, 4, 0b0111},
    {2, 2, 5, 0b01011},
    {2, 3, 6, 0b001110},
    {2, 4, 7, 0b0010101},
    {2, 5, 8, 0b00011110},
    {2, 6, 7, 0b0001010},
    {2, 7, 8, 0b00000111},
    {3, 0, 6, 0b010001},
    {3, 1, 5, 0b01010},
    {3, 2, 6, 0b001111},
    {3, 3, 6, 0b001100},
    {3, 4, 7, 0b0010010},
    {3, 5, 8, 0b00011100},
    {3, 6, 8, 0b00001110},
    {3, 7, 8, 0b00000101},
    {4, 0, 7, 0b0100000},
    {4, 1, 6, 0b001101},
    {4, 2, 7, 0b0010110},
    {4, 3, 7, 0b0010011},
    {4, 4, 8, 0b00010010},
    {4, 5, 8, 0b00010000},
    {4, 6, 8, 0b00001001},
    {4, 7, 9, 0b000000101},
    {5, 0, 8, 0b00101000},
    {5, 1, 7, 0b0010001},
    {5, 2, 8, 0b00011111},
    {5, 3, 8, 0b00011101},
    {5, 4, 8, 0b00010001},
    {5, 5, 9, 0b000001101},
    {5, 6, 8, 0b00000100},
    {5, 7, 9, 0b000000010},
    {6, 0, 8, 0b00011011},
    {6, 1, 7, 0b0001100},
    {6, 2, 7, 0b0001011},
    {6, 3, 8, 0b00001111},
    {6, 4, 8, 0b00001010},
    {6, 5, 9, 0b000000111},
    {6, 6, 9, 0b000000100},
    {6, 7, 10, 0b0000000001},
    {7, 0, 9, 0b000011011},
    {7, 1, 8, 0b00001100},
    {7, 2, 8, 0b00001000},
    {7, 3, 9, 0b000001100},
    {7, 4, 9, 0b000000110},
    {7, 5, 9, 0b000000011},
    {7, 6, 9, 0b000000001},
    {7, 7, 10, 0b0000000000}
};

const int SIZE_HUFFMAN_TABLE_13 = 256;
const int LINBITS_HUFFMAN_TABLE_13 = 0;
const HuffmanEntry2 huffman_table_13[] = {
    {0, 0, 1, 0b1},
    {0, 1, 4, 0b0101},
    {0, 2, 6, 0b001110},
    {0, 3, 7, 0b0010101},
    {0, 4, 8, 0b00100010},
    {0, 5, 9, 0b000110011},
    {0, 6, 9, 0b000101110},
    {0, 7, 10, 0b0001000111},
    {0, 8, 9, 0b000101010},
    {0, 9, 10, 0b0000110100},
    {0, 10, 11, 0b00001000100},
    {0, 11, 11, 0b00000110100},
    {0, 12, 12, 0b000001000011},
    {0, 13, 12, 0b000000101100},
    {0, 14, 13, 0b0000000101011},
    {0, 15, 13, 0b0000000010011},
    {1, 0, 3, 0b011},
    {1, 1, 4, 0b0100},
    {1, 2, 6, 0b001100},
    {1, 3, 7, 0b0010011},
    {1, 4, 8, 0b00011111},
    {1, 5, 8, 0b00011010},
    {1, 6, 9, 0b000101100},
    {1, 7, 9, 0b000100001},
    {1, 8, 9, 0b000011111},
    {1, 9, 9, 0b000011000},
    {1, 10, 10, 0b0000100000},
    {1, 11, 10, 0b0000011000},
    {1, 12, 11, 0b00000011111},
    {1, 13, 12, 0b000000100011},
    {1, 14, 12, 0b000000010110},
    {1, 15, 12, 0b000000001110},
    {2, 0, 6, 0b001111},
    {2, 1, 6, 0b001101},
    {2, 2, 7, 0b0010111},
    {2, 3, 8, 0b00100100},
    {2, 4, 9, 0b000111011},
    {2, 5, 9, 0b000110001},
    {2, 6, 10, 0b0001001101},
    {2, 7, 10, 0b0001000001},
    {2, 8, 9, 0b000011101},
    {2, 9, 10, 0b0000101000},
    {2, 10, 10, 0b0000011110},
    {2, 11, 11, 0b00000101000},
    {2, 12, 11, 0b00000011011},
    {2, 13, 12, 0b000000100001},
    {2, 14, 13, 0b0000000101010},
    {2, 15, 13, 0b0000000010000},
    {3, 0, 7, 0b0010110},
    {3, 1, 7, 0b0010100},
    {3, 2, 8, 0b00100101},
    {3, 3, 9, 0b000111101},
    {3, 4, 9, 0b000111000},
    {3, 5, 10, 0b0001001111},
    {3, 6, 10, 0b0001001001},
    {3, 7, 10, 0b0001000000},
    {3, 8, 10, 0b0000101011},
    {3, 9, 11, 0b00001001100},
    {3, 10, 11, 0b00000111000},
    {3, 11, 11, 0b00000100101},
    {3, 12, 11, 0b00000011010},
    {3, 13, 12, 0b000000011111},
    {3, 14, 13, 0b0000000011001},
    {3, 15, 13, 0b0000000001110},
    {4, 0, 8, 0b00100011},
    {4, 1, 7, 0b0010000},
    {4, 2, 9, 0b000111100},
    {4, 3, 9, 0b000111001},
    {4, 4, 10, 0b0001100001},
    {4, 5, 10, 0b0001001011},
    {4, 6, 11, 0b00001110010},
    {4, 7, 11, 0b00001011011},
    {4, 8, 10, 0b0000110110},
    {4, 9, 11, 0b00001001001},
    {4, 10, 11, 0b00000110111},
    {4, 11, 12, 0b000000101001},
    {4, 12, 12, 0b000000110000},
    {4, 13, 13, 0b0000000110101},
    {4, 14, 13, 0b0000000010111},
    {4, 15, 14, 0b00000000011000},
    {5, 0, 9, 0b000111010},
    {5, 1, 8, 0b00011011},
    {5, 2, 9, 0b000110010},
    {5, 3, 10, 0b0001100000},
    {5, 4, 10, 0b0001001100},
    {5, 5, 10, 0b0001000110},
    {5, 6, 11, 0b00001011101},
    {5, 7, 11, 0b00001010100},
    {5, 8, 11, 0b00001001101},
    {5, 9, 11, 0b00000111010},
    {5, 10, 12, 0b000001001111},
    {5, 11, 11, 0b00000011101},
    {5, 12, 13, 0b0000001001010},
    {5, 13, 13, 0b0000000110001},
    {5, 14, 14, 0b00000000101001},
    {5, 15, 14, 0b00000000010001},
    {6, 0, 9, 0b000101111},
    {6, 1, 9, 0b000101101},
    {6, 2, 10, 0b0001001110},
    {6, 3, 10, 0b0001001010},
    {6, 4, 11, 0b00001110011},
    {6, 5, 11, 0b00001011110},
    {6, 6, 11, 0b00001011010},
    {6, 7, 11, 0b00001001111},
    {6, 8, 11, 0b00001000101},
    {6, 9, 12, 0b000001010011},
    {6, 10, 12, 0b000001000111},
    {6, 11, 12, 0b000000110010},
    {6, 12, 13, 0b0000000111011},
    {6, 13, 13, 0b0000000100110},
    {6, 14, 14, 0b00000000100100},
    {6, 15, 14, 0b00000000001111},
    {7, 0, 10, 0b0001001000},
    {7, 1, 9, 0b000100010},
    {7, 2, 10, 0b0000111000},
    {7, 3, 11, 0b00001011111},
    {7, 4, 11, 0b00001011100},
    {7, 5, 11, 0b00001010101},
    {7, 6, 12, 0b000001011011},
    {7, 7, 12, 0b000001011010},
    {7, 8, 12, 0b000001010110},
    {7, 9, 12, 0b000001001001},
    {7, 10, 13, 0b0000001001101},
    {7, 11, 13, 0b0000001000001},
    {7, 12, 13, 0b0000000110011},
    {7, 13, 14, 0b00000000101100},
    {7, 14, 16, 0b0000000000101011},
    {7, 15, 16, 0b0000000000101010},
    {8, 0, 9, 0b000101011},
    {8, 1, 8, 0b00010100},
    {8, 2, 9, 0b000011110},
    {8, 3, 10, 0b0000101100},
    {8, 4, 10, 0b0000110111},
    {8, 5, 11, 0b00001001110},
    {8, 6, 11, 0b00001001000},
    {8, 7, 12, 0b000001010111},
    {8, 8, 12, 0b000001001110},
    {8, 9, 12, 0b000000111101},
    {8, 10, 12, 0b000000101110},
    {8, 11, 13, 0b0000000110110},
    {8, 12, 13, 0b0000000100101},
    {8, 13, 14, 0b00000000011110},
    {8, 14, 15, 0b000000000010100},
    {8, 15, 15, 0b000000000010000},
    {9, 0, 10, 0b0000110101},
    {9, 1, 9, 0b000011001},
    {9, 2, 10, 0b0000101001},
    {9, 3, 10, 0b0000100101},
    {9, 4, 11, 0b00000101100},
    {9, 5, 11, 0b00000111011},
    {9, 6, 11, 0b00000110110},
    {9, 7, 13, 0b0000001010001},
    {9, 8, 12, 0b000001000010},
    {9, 9, 13, 0b0000001001100},
    {9, 10, 13, 0b0000000111001},
    {9, 11, 14, 0b00000000110110},
    {9, 12, 14, 0b00000000100101},
    {9, 13, 14, 0b00000000010010},
    {9, 14, 16, 0b0000000000100111},
    {9, 15, 15, 0b000000000001011},
    {10, 0, 10, 0b0000100011},
    {10, 1, 10, 0b0000100001},
    {10, 2, 10, 0b0000011111},
    {10, 3, 11, 0b00000111001},
    {10, 4, 11, 0b00000101010},
    {10, 5, 12, 0b000001010010},
    {10, 6, 12, 0b000001001000},
    {10, 7, 13, 0b0000001010000},
    {10, 8, 12, 0b000000101111},
    {10, 9, 13, 0b0000000111010},
    {10, 10, 14, 0b00000000110111},
    {10, 11, 13, 0b0000000010101},
    {10, 12, 14, 0b00000000010110},
    {10, 13, 15, 0b000000000011010},
    {10, 14, 16, 0b0000000000100110},
    {10, 15, 17, 0b00000000000010110},
    {11, 0, 11, 0b00000110101},
    {11, 1, 10, 0b0000011001},
    {11, 2, 10, 0b0000010111},
    {11, 3, 11, 0b00000100110},
    {11, 4, 12, 0b000001000110},
    {11, 5, 12, 0b000000111100},
    {11, 6, 12, 0b000000110011},
    {11, 7, 12, 0b000000100100},
    {11, 8, 13, 0b0000000110111},
    {11, 9, 13, 0b0000000011010},
    {11, 10, 13, 0b0000000100010},
    {11, 11, 14, 0b00000000010111},
    {11, 12, 15, 0b000000000011011},
    {11, 13, 15, 0b000000000001110},
    {11, 14, 15, 0b000000000001001},
    {11, 15, 16, 0b0000000000000111},
    {12, 0, 11, 0b00000100010},
    {12, 1, 11, 0b00000100000},
    {12, 2, 11, 0b00000011100},
    {12, 3, 12, 0b000000100111},
    {12, 4, 12, 0b000000110001},
    {12, 5, 13, 0b0000001001011},
    {12, 6, 12, 0b000000011110},
    {12, 7, 13, 0b0000000110100},
    {12, 8, 14, 0b00000000110000},
    {12, 9, 14, 0b00000000101000},
    {12, 10, 15, 0b000000000110100},
    {12, 11, 15, 0b000000000011100},
    {12, 12, 15, 0b000000000010010},
    {12, 13, 16, 0b0000000000010001},
    {12, 14, 16, 0b0000000000001001},
    {12, 15, 16, 0b0000000000000101},
    {13, 0, 12, 0b000000101101},
    {13, 1, 11, 0b00000010101},
    {13, 2, 12, 0b000000100010},
    {13, 3, 13, 0b0000001000000},
    {13, 4, 13, 0b0000000111000},
    {13, 5, 13, 0b0000000110010},
    {13, 6, 14, 0b00000000110001},
    {13, 7, 14, 0b00000000101101},
    {13, 8, 14, 0b00000000011111},
    {13, 9, 14, 0b00000000010011},
    {13, 10, 14, 0b00000000001100},
    {13, 11, 15, 0b000000000001111},
    {13, 12, 16, 0b0000000000001010},
    {13, 13, 15, 0b000000000000111},
    {13, 14, 16, 0b0000000000000110},
    {13, 15, 16, 0b0000000000000011},
    {14, 0, 13, 0b0000000110000},
    {14, 1, 12, 0b000000010111},
    {14, 2, 12, 0b000000010100},
    {14, 3, 13, 0b0000000100111},
    {14, 4, 13, 0b0000000100100},
    {14, 5, 13, 0b0000000100011},
    {14, 6, 15, 0b000000000110101},
    {14, 7, 14, 0b00000000010101},
    {14, 8, 14, 0b00000000010000},
    {14, 9, 17, 0b00000000000010111},
    {14, 10, 15, 0b000000000001101},
    {14, 11, 15, 0b000000000001010},
    {14, 12, 15, 0b000000000000110},
    {14, 13, 17, 0b00000000000000001},
    {14, 14, 16, 0b0000000000000100},
    {14, 15, 16, 0b0000000000000010},
    {15, 0, 12, 0b000000010000},
    {15, 1, 12, 0b000000001111},
    {15, 2, 13, 0b0000000010001},
    {15, 3, 14, 0b00000000011011},
    {15, 4, 14, 0b00000000011001},
    {15, 5, 14, 0b00000000010100},
    {15, 6, 15, 0b000000000011101},
    {15, 7, 14, 0b00000000001011},
    {15, 8, 15, 0b000000000010001},
    {15, 9, 15, 0b000000000001100},
    {15, 10, 16, 0b0000000000010000},
    {15, 11, 16, 0b0000000000001000},
    {15, 12, 19, 0b0000000000000000001},
    {15, 13, 18, 0b000000000000000001},
    {15, 14, 19, 0b0000000000000000000},
    {15, 15, 16, 0b0000000000000001}
};

const int SIZE_HUFFMAN_TABLE_15 = 256;
const int LINBITS_HUFFMAN_TABLE_15 = 0;
const HuffmanEntry2 huffman_table_15[] = {
    {0, 0, 3, 0b111},
    {0, 1, 4, 0b1100},
    {0, 2, 5, 0b10010},
    {0, 3, 7, 0b0110101},
    {0, 4, 7, 0b0101111},
    {0, 5, 8, 0b01001100},
    {0, 6, 9, 0b001111100},
    {0, 7, 9, 0b001101100},
    {0, 8, 9, 0b001011001},
    {0, 9, 10, 0b0001111011},
    {0, 10, 10, 0b0001101100},
    {0, 11, 11, 0b00001110111},
    {0, 12, 11, 0b00001101011},
    {0, 13, 11, 0b00001010001},
    {0, 14, 12, 0b000001111010},
    {0, 15, 13, 0b0000000111111},
    {1, 0, 4, 0b1101},
    {1, 1, 3, 0b101},
    {1, 2, 5, 0b10000},
    {1, 3, 6, 0b011011},
    {1, 4, 7, 0b0101110},
    {1, 5, 7, 0b0100100},
    {1, 6, 8, 0b00111101},
    {1, 7, 8, 0b00110011},
    {1, 8, 8, 0b00101010},
    {1, 9, 9, 0b001000110},
    {1, 10, 9, 0b000110100},
    {1, 11, 10, 0b0001010011},
    {1, 12, 10, 0b0001000001},
    {1, 13, 10, 0b0000101001},
    {1, 14, 11, 0b00000111011},
    {1, 15, 11, 0b00000100100},
    {2, 0, 5, 0b10011},
    {2, 1, 5, 0b10001},
    {2, 2, 5, 0b01111},
    {2, 3, 6, 0b011000},
    {2, 4, 7, 0b0101001},
    {2, 5, 7, 0b0100010},
    {2, 6, 8, 0b00111011},
    {2, 7, 8, 0b00110000},
    {2, 8, 8, 0b00101000},
    {2, 9, 9, 0b001000000},
    {2, 10, 9, 0b000110010},
    {2, 11, 10, 0b0001001110},
    {2, 12, 10, 0b0000111110},
    {2, 13, 11, 0b00001010000},
    {2, 14, 11, 0b00000111000},
    {2, 15, 11, 0b00000100001},
    {3, 0, 6, 0b011101},
    {3, 1, 6, 0b011100},
    {3, 2, 6, 0b011001},
    {3, 3, 7, 0b0101011},
    {3, 4, 7, 0b0100111},
    {3, 5, 8, 0b00111111},
    {3, 6, 8, 0b00110111},
    {3, 7, 9, 0b001011101},
    {3, 8, 9, 0b001001100},
    {3, 9, 9, 0b000111011},
    {3, 10, 10, 0b0001011101},
    {3, 11, 10, 0b0001001000},
    {3, 12, 10, 0b0000110110},
    {3, 13, 11, 0b00001001011},
    {3, 14, 11, 0b00000110010},
    {3, 15, 11, 0b00000011101},
    {4, 0, 7, 0b0110100},
    {4, 1, 6, 0b010110},
    {4, 2, 7, 0b0101010},
    {4, 3, 7, 0b0101000},
    {4, 4, 8, 0b01000011},
    {4, 5, 8, 0b00111001},
    {4, 6, 9, 0b001011111},
    {4, 7, 9, 0b001001111},
    {4, 8, 9, 0b001001000},
    {4, 9, 9, 0b000111001},
    {4, 10, 10, 0b0001011001},
    {4, 11, 10, 0b0001000101},
    {4, 12, 10, 0b0000110001},
    {4, 13, 11, 0b00001000010},
    {4, 14, 11, 0b00000101110},
    {4, 15, 11, 0b00000011011},
    {5, 0, 8, 0b01001101},
    {5, 1, 7, 0b0100101},
    {5, 2, 7, 0b0100011},
    {5, 3, 8, 0b01000010},
    {5, 4, 8, 0b00111010},
    {5, 5, 8, 0b00110100},
    {5, 6, 9, 0b001011011},
    {5, 7, 9, 0b001001010},
    {5, 8, 9, 0b000111110},
    {5, 9, 9, 0b000110000},
    {5, 10, 10, 0b0001001111},
    {5, 11, 10, 0b0000111111},
    {5, 12, 11, 0b00001011010},
    {5, 13, 11, 0b00000111110},
    {5, 14, 11, 0b00000101000},
    {5, 15, 12, 0b000000100110},
    {6, 0, 9, 0b001111101},
    {6, 1, 7, 0b0100000},
    {6, 2, 8, 0b00111100},
    {6, 3, 8, 0b00111000},
    {6, 4, 8, 0b00110010},
    {6, 5, 9, 0b001011100},
    {6, 6, 9, 0b001001110},
    {6, 7, 9, 0b001000001},
    {6, 8, 9, 0b000110111},
    {6, 9, 10, 0b0001010111},
    {6, 10, 10, 0b0001000111},
    {6, 11, 10, 0b0000110011},
    {6, 12, 11, 0b00001001001},
    {6, 13, 11, 0b00000110011},
    {6, 14, 12, 0b000001000110},
    {6, 15, 12, 0b000000011110},
    {7, 0, 9, 0b001101101},
    {7, 1, 8, 0b00110101},
    {7, 2, 8, 0b00110001},
    {7, 3, 9, 0b001011110},
    {7, 4, 9, 0b001011000},
    {7, 5, 9, 0b001001011},
    {7, 6, 9, 0b001000010},
    {7, 7, 10, 0b0001111010},
    {7, 8, 10, 0b0001011011},
    {7, 9, 10, 0b0001001001},
    {7, 10, 10, 0b0000111000},
    {7, 11, 10, 0b0000101010},
    {7, 12, 11, 0b00001000000},
    {7, 13, 11, 0b00000101100},
    {7, 14, 11, 0b00000010101},
    {7, 15, 12, 0b000000011001},
    {8, 0, 9, 0b001011010},
    {8, 1, 8, 0b00101011},
    {8, 2, 8, 0b00101001},
    {8, 3, 9, 0b001001101},
    {8, 4, 9, 0b001001001},
    {8, 5, 9, 0b000111111},
    {8, 6, 9, 0b000111000},
    {8, 7, 10, 0b0001011100},
    {8, 8, 10, 0b0001001101},
    {8, 9, 10, 0b0001000010},
    {8, 10, 10, 0b0000101111},
    {8, 11, 11, 0b00001000011},
    {8, 12, 11, 0b00000110000},
    {8, 13, 12, 0b000000110101},
    {8, 14, 12, 0b000000100100},
    {8, 15, 12, 0b000000010100},
    {9, 0, 9, 0b001000111},
    {9, 1, 8, 0b00100010},
    {9, 2, 9, 0b001000011},
    {9, 3, 9, 0b000111100},
    {9, 4, 9, 0b000111010},
    {9, 5, 9, 0b000110001},
    {9, 6, 10, 0b0001011000},
    {9, 7, 10, 0b0001001100},
    {9, 8, 10, 0b0001000011},
    {9, 9, 11, 0b00001101010},
    {9, 10, 11, 0b00001000111},
    {9, 11, 11, 0b00000110110},
    {9, 12, 11, 0b00000100110},
    {9, 13, 12, 0b000000100111},
    {9, 14, 12, 0b000000010111},
    {9, 15, 12, 0b000000001111},
    {10, 0, 10, 0b0001101101},
    {10, 1, 9, 0b000110101},
    {10, 2, 9, 0b000110011},
    {10, 3, 9, 0b000101111},
    {10, 4, 10, 0b0001011010},
    {10, 5, 10, 0b0001010010},
    {10, 6, 10, 0b0000111010},
    {10, 7, 10, 0b0000111001},
    {10, 8, 10, 0b0000110000},
    {10, 9, 11, 0b00001001000},
    {10, 10, 11, 0b00000111001},
    {10, 11, 11, 0b00000101001},
    {10, 12, 11, 0b00000010111},
    {10, 13, 12, 0b000000011011},
    {10, 14, 13, 0b0000000111110},
    {10, 15, 12, 0b000000001001},
    {11, 0, 10, 0b0001010110},
    {11, 1, 9, 0b000101010},
    {11, 2, 9, 0b000101000},
    {11, 3, 9, 0b000100101},
    {11, 4, 10, 0b0001000110},
    {11, 5, 10, 0b0001000000},
    {11, 6, 10, 0b0000110100},
    {11, 7, 10, 0b0000101011},
    {11, 8, 11, 0b00001000110},
    {11, 9, 11, 0b00000110111},
    {11, 10, 11, 0b00000101010},
    {11, 11, 11, 0b00000011001},
    {11, 12, 12, 0b000000011101},
    {11, 13, 12, 0b000000010010},
    {11, 14, 12, 0b000000001011},
    {11, 15, 13, 0b0000000001011},
    {12, 0, 11, 0b00001110110},
    {12, 1, 10, 0b0001000100},
    {12, 2, 9, 0b000011110},
    {12, 3, 10, 0b0000110111},
    {12, 4, 10, 0b0000110010},
    {12, 5, 10, 0b0000101110},
    {12, 6, 11, 0b00001001010},
    {12, 7, 11, 0b00001000001},
    {12, 8, 11, 0b00000110001},
    {12, 9, 11, 0b00000100111},
    {12, 10, 11, 0b00000011000},
    {12, 11, 11, 0b00000010000},
    {12, 12, 12, 0b000000010110},
    {12, 13, 12, 0b000000001101},
    {12, 14, 13, 0b0000000001110},
    {12, 15, 13, 0b0000000000111},
    {13, 0, 11, 0b00001011011},
    {13, 1, 10, 0b0000101100},
    {13, 2, 10, 0b0000100111},
    {13, 3, 10, 0b0000100110},
    {13, 4, 10, 0b0000100010},
    {13, 5, 11, 0b00000111111},
    {13, 6, 11, 0b00000110100},
    {13, 7, 11, 0b00000101101},
    {13, 8, 11, 0b00000011111},
    {13, 9, 12, 0b000000110100},
    {13, 10, 12, 0b000000011100},
    {13, 11, 12, 0b000000010011},
    {13, 12, 12, 0b000000001110},
    {13, 13, 12, 0b000000001000},
    {13, 14, 13, 0b0000000001001},
    {13, 15, 13, 0b0000000000011},
    {14, 0, 12, 0b000001111011},
    {14, 1, 11, 0b00000111100},
    {14, 2, 11, 0b00000111010},
    {14, 3, 11, 0b00000110101},
    {14, 4, 11, 0b00000101111},
    {14, 5, 11, 0b00000101011},
    {14, 6, 11, 0b00000100000},
    {14, 7, 11, 0b00000010110},
    {14, 8, 12, 0b000000100101},
    {14, 9, 12, 0b000000011000},
    {14, 10, 12, 0b000000010001},
    {14, 11, 12, 0b000000001100},
    {14, 12, 13, 0b0000000001111},
    {14, 13, 13, 0b0000000001010},
    {14, 14, 12, 0b000000000010},
    {14, 15, 13, 0b0000000000001},
    {15, 0, 12, 0b000001000111},
    {15, 1, 11, 0b00000100101},
    {15, 2, 11, 0b00000100010},
    {15, 3, 11, 0b00000011110},
    {15, 4, 11, 0b00000011100},
    {15, 5, 11, 0b00000010100},
    {15, 6, 11, 0b00000010001},
    {15, 7, 12, 0b000000011010},
    {15, 8, 12, 0b000000010101},
    {15, 9, 12, 0b000000010000},
    {15, 10, 12, 0b000000001010},
    {15, 11, 12, 0b000000000110},
    {15, 12, 13, 0b0000000001000},
    {15, 13, 13, 0b0000000000110},
    {15, 14, 13, 0b0000000000010},
    {15, 15, 13, 0b0000000000000}
};

const int SIZE_HUFFMAN_TABLE_16 = 256;
const int LINBITS_HUFFMAN_TABLE_16 = 1;
const HuffmanEntry2 huffman_table_16[] = {
    {0, 0, 1, 0b1},
    {0, 1, 4, 0b0101},
    {0, 2, 6, 0b001110},
    {0, 3, 8, 0b00101100},
    {0, 4, 9, 0b001001010},
    {0, 5, 9, 0b000111111},
    {0, 6, 10, 0b0001101110},
    {0, 7, 10, 0b0001011101},
    {0, 8, 11, 0b00010101100},
    {0, 9, 11, 0b00010010101},
    {0, 10, 11, 0b00010001010},
    {0, 11, 12, 0b000011110010},
    {0, 12, 12, 0b000011100001},
    {0, 13, 12, 0b000011000011},
    {0, 14, 13, 0b0000101111000},
    {0, 15, 9, 0b000010001},
    {1, 0, 3, 0b011},
    {1, 1, 4, 0b0100},
    {1, 2, 6, 0b001100},
    {1, 3, 7, 0b0010100},
    {1, 4, 8, 0b00100011},
    {1, 5, 9, 0b000111110},
    {1, 6, 9, 0b000110101},
    {1, 7, 9, 0b000101111},
    {1, 8, 10, 0b0001010011},
    {1, 9, 10, 0b0001001011},
    {1, 10, 10, 0b0001000100},
    {1, 11, 11, 0b00001110111},
    {1, 12, 12, 0b000011001001},
    {1, 13, 11, 0b00001101011},
    {1, 14, 12, 0b000011001111},
    {1, 15, 8, 0b00001001},
    {2, 0, 6, 0b001111},
    {2, 1, 6, 0b001101},
    {2, 2, 7, 0b0010111},
    {2, 3, 8, 0b00100110},
    {2, 4, 9, 0b001000011},
    {2, 5, 9, 0b000111010},
    {2, 6, 10, 0b0001100111},
    {2, 7, 10, 0b0001011010},
    {2, 8, 11, 0b00010100001},
    {2, 9, 10, 0b0001001000},
    {2, 10, 11, 0b00001111111},
    {2, 11, 11, 0b00001110101},
    {2, 12, 11, 0b00001101110},
    {2, 13, 12, 0b000011010001},
    {2, 14, 12, 0b000011001110},
    {2, 15, 9, 0b000010000},
    {3, 0, 8, 0b00101101},
    {3, 1, 7, 0b0010101},
    {3, 2, 8, 0b00100111},
    {3, 3, 9, 0b001000101},
    {3, 4, 9, 0b001000000},
    {3, 5, 10, 0b0001110010},
    {3, 6, 10, 0b0001100011},
    {3, 7, 10, 0b0001010111},
    {3, 8, 11, 0b00010011110},
    {3, 9, 11, 0b00010001100},
    {3, 10, 12, 0b000011111100},
    {3, 11, 12, 0b000011010100},
    {3, 12, 12, 0b000011000111},
    {3, 13, 13, 0b0000110000011},
    {3, 14, 13, 0b0000101101101},
    {3, 15, 10, 0b0000011010},
    {4, 0, 9, 0b001001011},
    {4, 1, 8, 0b00100100},
    {4, 2, 9, 0b001000100},
    {4, 3, 9, 0b001000001},
    {4, 4, 10, 0b0001110011},
    {4, 5, 10, 0b0001100101},
    {4, 6, 11, 0b00010110011},
    {4, 7, 11, 0b00010100100},
    {4, 8, 11, 0b00010011011},
    {4, 9, 12, 0b000100001000},
    {4, 10, 12, 0b000011110110},
    {4, 11, 12, 0b000011100010},
    {4, 12, 13, 0b0000110001011},
    {4, 13, 13, 0b0000101111110},
    {4, 14, 13, 0b0000101101010},
    {4, 15, 9, 0b000001001},
    {5, 0, 9, 0b001000010},
    {5, 1, 8, 0b00011110},
    {5, 2, 9, 0b000111011},
    {5, 3, 9, 0b000111000},
    {5, 4, 10, 0b0001100110},
    {5, 5, 11, 0b00010111001},
    {5, 6, 11, 0b00010101101},
    {5, 7, 12, 0b000100001001},
    {5, 8, 11, 0b00010001110},
    {5, 9, 12, 0b000011111101},
    {5, 10, 12, 0b000011101000},
    {5, 11, 13, 0b0000110010000},
    {5, 12, 13, 0b0000110000100},
    {5, 13, 13, 0b0000101111010},
    {5, 14, 14, 0b00000110111101},
    {5, 15, 10, 0b0000010000},
    {6, 0, 10, 0b0001101111},
    {6, 1, 9, 0b000110110},
    {6, 2, 9, 0b000110100},
    {6, 3, 10, 0b0001100100},
    {6, 4, 11, 0b00010111000},
    {6, 5, 11, 0b00010110010},
    {6, 6, 11, 0b00010100000},
    {6, 7, 11, 0b00010000101},
    {6, 8, 12, 0b000100000001},
    {6, 9, 12, 0b000011110100},
    {6, 10, 12, 0b000011100100},
    {6, 11, 12, 0b000011011001},
    {6, 12, 13, 0b0000110000001},
    {6, 13, 13, 0b0000101101110},
    {6, 14, 14, 0b00001011001011},
    {6, 15, 10, 0b0000001010},
    {7, 0, 10, 0b0001100010},
    {7, 1, 9, 0b000110000},
    {7, 2, 10, 0b0001011011},
    {7, 3, 10, 0b0001011000},
    {7, 4, 11, 0b00010100101},
    {7, 5, 11, 0b00010011101},
    {7, 6, 11, 0b00010010100},
    {7, 7, 12, 0b000100000101},
    {7, 8, 12, 0b000011111000},
    {7, 9, 13, 0b0000110010111},
    {7, 10, 13, 0b0000110001101},
    {7, 11, 13, 0b0000101110100},
    {7, 12, 13, 0b0000101111100},
    {7, 13, 15, 0b000001101111001},
    {7, 14, 15, 0b000001101110100},
    {7, 15, 10, 0b0000001000},
    {8, 0, 10, 0b0001010101},
    {8, 1, 10, 0b0001010100},
    {8, 2, 10, 0b0001010001},
    {8, 3, 11, 0b00010011111},
    {8, 4, 11, 0b00010011100},
    {8, 5, 11, 0b00010001111},
    {8, 6, 12, 0b000100000100},
    {8, 7, 12, 0b000011111001},
    {8, 8, 13, 0b0000110101011},
    {8, 9, 13, 0b0000110010001},
    {8, 10, 13, 0b0000110001000},
    {8, 11, 13, 0b0000101111111},
    {8, 12, 14, 0b00001011010111},
    {8, 13, 14, 0b00001011001001},
    {8, 14, 14, 0b00001011000100},
    {8, 15, 10, 0b0000000111},
    {9, 0, 11, 0b00010011010},
    {9, 1, 10, 0b0001001100},
    {9, 2, 10, 0b0001001001},
    {9, 3, 11, 0b00010001101},
    {9, 4, 11, 0b00010000011},
    {9, 5, 12, 0b000100000000},
    {9, 6, 12, 0b000011110101},
    {9, 7, 13, 0b0000110101010},
    {9, 8, 13, 0b0000110010110},
    {9, 9, 13, 0b0000110001010},
    {9, 10, 13, 0b0000110000000},
    {9, 11, 14, 0b00001011011111},
    {9, 12, 13, 0b0000101100111},
    {9, 13, 14, 0b00001011000110},
    {9, 14, 13, 0b0000101100000},
    {9, 15, 11, 0b00000001011},
    {10, 0, 11, 0b00010001011},
    {10, 1, 11, 0b00010000001},
    {10, 2, 10, 0b0001000011},
    {10, 3, 11, 0b00001111101},
    {10, 4, 12, 0b000011110111},
    {10, 5, 12, 0b000011101001},
    {10, 6, 12, 0b000011100101},
    {10, 7, 12, 0b000011011011},
    {10, 8, 13, 0b0000110001001},
    {10, 9, 14, 0b00001011100111},
    {10, 10, 14, 0b00001011100001},
    {10, 11, 14, 0b00001011010000},
    {10, 12, 15, 0b000001101110101},
    {10, 13, 15, 0b000001101110010},
    {10, 14, 14, 0b00000110110111},
    {10, 15, 10, 0b0000000100},
    {11, 0, 12, 0b000011110011},
    {11, 1, 11, 0b00001111000},
    {11, 2, 11, 0b00001110110},
    {11, 3, 11, 0b00001110011},
    {11, 4, 12, 0b000011100011},
    {11, 5, 12, 0b000011011111},
    {11, 6, 13, 0b0000110001100},
    {11, 7, 14, 0b00001011101010},
    {11, 8, 14, 0b00001011100110},
    {11, 9, 14, 0b00001011100000},
    {11, 10, 14, 0b00001011010001},
    {11, 11, 14, 0b00001011001000},
    {11, 12, 14, 0b00001011000010},
    {11, 13, 13, 0b0000011011111},
    {11, 14, 14, 0b00000110110100},
    {11, 15, 11, 0b00000000110},
    {12, 0, 12, 0b000011001010},
    {12, 1, 12, 0b000011100000},
    {12, 2, 12, 0b000011011110},
    {12, 3, 12, 0b000011011010},
    {12, 4, 12, 0b000011011000},
    {12, 5, 13, 0b0000110000101},
    {12, 6, 13, 0b0000110000010},
    {12, 7, 13, 0b0000101111101},
    {12, 8, 13, 0b0000101101100},
    {12, 9, 15, 0b000001101111000},
    {12, 10, 14, 0b00000110111011},
    {12, 11, 14, 0b00001011000011},
    {12, 12, 14, 0b00000110111000},
    {12, 13, 14, 0b00000110110101},
    {12, 14, 16, 0b0000011011000000},
    {12, 15, 11, 0b00000000100},
    {13, 0, 14, 0b00001011101011},
    {13, 1, 12, 0b000011010011},
    {13, 2, 12, 0b000011010010},
    {13, 3, 12, 0b000011010000},
    {13, 4, 13, 0b0000101110010},
    {13, 5, 13, 0b0000101111011},
    {13, 6, 14, 0b00001011011110},
    {13, 7, 14, 0b00001011010011},
    {13, 8, 14, 0b00001011001010},
    {13, 9, 16, 0b0000011011000111},
    {13, 10, 15, 0b000001101110011},
    {13, 11, 15, 0b000001101101101},
    {13, 12, 15, 0b000001101101100},
    {13, 13, 17, 0b00000110110000011},
    {13, 14, 15, 0b000001101100001},
    {13, 15, 11, 0b00000000010},
    {14, 0, 13, 0b0000101111001},
    {14, 1, 13, 0b0000101110001},
    {14, 2, 11, 0b00001100110},
    {14, 3, 12, 0b000010111011},
    {14, 4, 14, 0b00001011010110},
    {14, 5, 14, 0b00001011010010},
    {14, 6, 13, 0b0000101100110},
    {14, 7, 14, 0b00001011000111},
    {14, 8, 14, 0b00001011000101},
    {14, 9, 15, 0b000001101100010},
    {14, 10, 16, 0b0000011011000110},
    {14, 11, 15, 0b000001101100111},
    {14, 12, 17, 0b00000110110000010},
    {14, 13, 15, 0b000001101100110},
    {14, 14, 14, 0b00000110110010},
    {14, 15, 11, 0b00000000000},
    {15, 0, 9, 0b000001100},
    {15, 1, 8, 0b00001010},
    {15, 2, 8, 0b00000111},
    {15, 3, 9, 0b000001011},
    {15, 4, 9, 0b000001010},
    {15, 5, 10, 0b0000010001},
    {15, 6, 10, 0b0000001011},
    {15, 7, 10, 0b0000001001},
    {15, 8, 11, 0b00000001101},
    {15, 9, 11, 0b00000001100},
    {15, 10, 11, 0b00000001010},
    {15, 11, 11, 0b00000000111},
    {15, 12, 11, 0b00000000101},
    {15, 13, 11, 0b00000000011},
    {15, 14, 11, 0b00000000001},
    {15, 15, 8, 0b00000011}
};

const int SIZE_HUFFMAN_TABLE_17 = 256;
const int LINBITS_HUFFMAN_TABLE_17 = 2;
const HuffmanEntry2* huffman_table_17 = huffman_table_16;

const int SIZE_HUFFMAN_TABLE_18 = 256;
const int LINBITS_HUFFMAN_TABLE_18 = 3;
const HuffmanEntry2* huffman_table_18 = huffman_table_16;

const int SIZE_HUFFMAN_TABLE_19 = 256;
const int LINBITS_HUFFMAN_TABLE_19 = 4;
const HuffmanEntry2* huffman_table_19 = huffman_table_16;

const int SIZE_HUFFMAN_TABLE_20 = 256;
const int LINBITS_HUFFMAN_TABLE_20 = 6;
const HuffmanEntry2* huffman_table_20 = huffman_table_16;

const int SIZE_HUFFMAN_TABLE_21 = 256;
const int LINBITS_HUFFMAN_TABLE_21 = 8;
const HuffmanEntry2* huffman_table_21 = huffman_table_16;

const int SIZE_HUFFMAN_TABLE_22 = 256;
const int LINBITS_HUFFMAN_TABLE_22 = 10;
const HuffmanEntry2* huffman_table_22 = huffman_table_16;

const int SIZE_HUFFMAN_TABLE_23 = 256;
const int LINBITS_HUFFMAN_TABLE_23 = 13;
const HuffmanEntry2* huffman_table_23 = huffman_table_16;

const int SIZE_HUFFMAN_TABLE_24 = 256;
const int LINBITS_HUFFMAN_TABLE_24 = 4;
const HuffmanEntry2 huffman_table_24[] = {
    { 0, 0, 4, 0b1111 },
    { 0, 1, 4, 0b1101 },
    { 0, 2, 6, 0b101110 },
    { 0, 3, 7, 0b1010000 },
    { 0, 4, 8, 0b10010010 },
    { 0, 5, 9, 0b100000110 },
    { 0, 6, 9, 0b011111000 },
    { 0, 7, 10, 0b0110110010 },
    { 0, 8, 10, 0b0110101010 },
    { 0, 9, 11, 0b01010011101 },
    { 0, 10, 11, 0b01010001101 },
    { 0, 11, 11, 0b01010001001 },
    { 0, 12, 11, 0b01001101101 },
    { 0, 13, 11, 0b01000000101 },
    { 0, 14, 12, 0b010000001000 },
    { 0, 15, 9, 0b001011000 },
    { 1, 0, 4, 0b1110 },
    { 1, 1, 4, 0b1100 },
    { 1, 2, 5, 0b10101 },
    { 1, 3, 6, 0b100110 },
    { 1, 4, 7, 0b1000111 },
    { 1, 5, 8, 0b10000010 },
    { 1, 6, 8, 0b01111010 },
    { 1, 7, 9, 0b011011000 },
    { 1, 8, 9, 0b011010001 },
    { 1, 9, 9, 0b011000110 },
    { 1, 10, 10, 0b0101000111 },
    { 1, 11, 10, 0b0101011001 },
    { 1, 12, 10, 0b0100111111 },
    { 1, 13, 10, 0b0100101001 },
    { 1, 14, 10, 0b0100010111 },
    { 1, 15, 8, 0b00101010 },
    { 2, 0, 6, 0b101111 },
    { 2, 1, 5, 0b10110 },
    { 2, 2, 6, 0b101001 },
    { 2, 3, 7, 0b1001010 },
    { 2, 4, 7, 0b1000100 },
    { 2, 5, 8, 0b10000000 },
    { 2, 6, 8, 0b01111000 },
    { 2, 7, 9, 0b011011101 },
    { 2, 8, 9, 0b011001111 },
    { 2, 9, 9, 0b011000010 },
    { 2, 10, 9, 0b010110110 },
    { 2, 11, 10, 0b0101010100 },
    { 2, 12, 10, 0b0100111011 },
    { 2, 13, 10, 0b0100100111 },
    { 2, 14, 11, 0b01000011101 },
    { 2, 15, 7, 0b0010010 },
    { 3, 0, 7, 0b1010001 },
    { 3, 1, 6, 0b100111 },
    { 3, 2, 7, 0b1001011 },
    { 3, 3, 7, 0b1000110 },
    { 3, 4, 8, 0b10000110 },
    { 3, 5, 8, 0b01111101 },
    { 3, 6, 8, 0b01110100 },
    { 3, 7, 9, 0b011011100 },
    { 3, 8, 9, 0b011001100 },
    { 3, 9, 9, 0b010111110 },
    { 3, 10, 9, 0b010110010 },
    { 3, 11, 10, 0b0101000101 },
    { 3, 12, 10, 0b0100110111 },
    { 3, 13, 10, 0b0100100101 },
    { 3, 14, 10, 0b0100001111 },
    { 3, 15, 7, 0b0010000 },
    { 4, 0, 8, 0b10010011 },
    { 4, 1, 7, 0b1001000 },
    { 4, 2, 7, 0b1000101 },
    { 4, 3, 8, 0b10000111 },
    { 4, 4, 8, 0b01111111 },
    { 4, 5, 8, 0b01110110 },
    { 4, 6, 8, 0b01110000 },
    { 4, 7, 9, 0b011010010 },
    { 4, 8, 9, 0b011001000 },
    { 4, 9, 9, 0b010111100 },
    { 4, 10, 10, 0b0101100000 },
    { 4, 11, 10, 0b0101000011 },
    { 4, 12, 10, 0b0100110010 },
    { 4, 13, 10, 0b0100011101 },
    { 4, 14, 11, 0b01000011100 },
    { 4, 15, 7, 0b0001110 },
    { 5, 0, 9, 0b100000111 },
    { 5, 1, 7, 0b1000010 },
    { 5, 2, 8, 0b10000001 },
    { 5, 3, 8, 0b01111110 },
    { 5, 4, 8, 0b01110111 },
    { 5, 5, 8, 0b01110010 },
    { 5, 6, 9, 0b011010110 },
    { 5, 7, 9, 0b011001010 },
    { 5, 8, 9, 0b011000000 },
    { 5, 9, 9, 0b010110100 },
    { 5, 10, 10, 0b0101010101 },
    { 5, 11, 10, 0b0100111101 },
    { 5, 12, 10, 0b0100101101 },
    { 5, 13, 10, 0b0100011001 },
    { 5, 14, 10, 0b0100000110 },
    { 5, 15, 7, 0b0001100 },
    { 6, 0, 9, 0b011111001 },
    { 6, 1, 8, 0b01111011 },
    { 6, 2, 8, 0b01111001 },
    { 6, 3, 8, 0b01110101 },
    { 6, 4, 8, 0b01110001 },
    { 6, 5, 9, 0b011010111 },
    { 6, 6, 9, 0b011001110 },
    { 6, 7, 9, 0b011000011 },
    { 6, 8, 9, 0b010111001 },
    { 6, 9, 10, 0b0101011011 },
    { 6, 10, 10, 0b0101001010 },
    { 6, 11, 10, 0b0100110100 },
    { 6, 12, 10, 0b0100100011 },
    { 6, 13, 10, 0b0100010000 },
    { 6, 14, 11, 0b01000001000 },
    { 6, 15, 7, 0b0001010 },
    { 7, 0, 10, 0b0110110011 },
    { 7, 1, 8, 0b01110011 },
    { 7, 2, 8, 0b01101111 },
    { 7, 3, 8, 0b01101101 },
    { 7, 4, 9, 0b011010011 },
    { 7, 5, 9, 0b011001011 },
    { 7, 6, 9, 0b011000100 },
    { 7, 7, 9, 0b010111011 },
    { 7, 8, 10, 0b0101100001 },
    { 7, 9, 10, 0b0101001100 },
    { 7, 10, 10, 0b0100111001 },
    { 7, 11, 10, 0b0100101010 },
    { 7, 12, 10, 0b0100011011 },
    { 7, 13, 11, 0b01000010011 },
    { 7, 14, 11, 0b00101111101 },
    { 7, 15, 8, 0b00010001 },
    { 8, 0, 10, 0b0110101011 },
    { 8, 1, 9, 0b011010100 },
    { 8, 2, 9, 0b011010000 },
    { 8, 3, 9, 0b011001101 },
    { 8, 4, 9, 0b011001001 },
    { 8, 5, 9, 0b011000001 },
    { 8, 6, 9, 0b010111010 },
    { 8, 7, 9, 0b010110001 },
    { 8, 8, 9, 0b010101001 },
    { 8, 9, 10, 0b0101000000 },
    { 8, 10, 10, 0b0100101111 },
    { 8, 11, 10, 0b0100011110 },
    { 8, 12, 10, 0b0100001100 },
    { 8, 13, 11, 0b01000000010 },
    { 8, 14, 11, 0b00101111001 },
    { 8, 15, 8, 0b00010000 },
    { 9, 0, 10, 0b0101001111 },
    { 9, 1, 9, 0b011000111 },
    { 9, 2, 9, 0b011000101 },
    { 9, 3, 9, 0b010111111 },
    { 9, 4, 9, 0b010111101 },
    { 9, 5, 9, 0b010110101 },
    { 9, 6, 9, 0b010101110 },
    { 9, 7, 10, 0b0101001101 },
    { 9, 8, 10, 0b0101000001 },
    { 9, 9, 10, 0b0100110001 },
    { 9, 10, 10, 0b0100100001 },
    { 9, 11, 10, 0b0100010011 },
    { 9, 12, 11, 0b01000001001 },
    { 9, 13, 11, 0b00101111011 },
    { 9, 14, 11, 0b00101110011 },
    { 9, 15, 8, 0b00001011 },
    { 10, 0, 11, 0b01010011100 },
    { 10, 1, 9, 0b010111000 },
    { 10, 2, 9, 0b010110111 },
    { 10, 3, 9, 0b010110011 },
    { 10, 4, 9, 0b010101111 },
    { 10, 5, 10, 0b0101011000 },
    { 10, 6, 10, 0b0101001011 },
    { 10, 7, 10, 0b0100111010 },
    { 10, 8, 10, 0b0100110000 },
    { 10, 9, 10, 0b0100100010 },
    { 10, 10, 10, 0b0100010101 },
    { 10, 11, 11, 0b01000010010 },
    { 10, 12, 11, 0b00101111111 },
    { 10, 13, 11, 0b00101110101 },
    { 10, 14, 11, 0b00101101110 },
    { 10, 15, 8, 0b00001010 },
    { 11, 0, 11, 0b01010001100 },
    { 11, 1, 10, 0b0101011010 },
    { 11, 2, 9, 0b010101011 },
    { 11, 3, 9, 0b010101000 },
    { 11, 4, 9, 0b010100100 },
    { 11, 5, 10, 0b0100111110 },
    { 11, 6, 10, 0b0100110101 },
    { 11, 7, 10, 0b0100101011 },
    { 11, 8, 10, 0b0100011111 },
    { 11, 9, 10, 0b0100010100 },
    { 11, 10, 10, 0b0100000111 },
    { 11, 11, 11, 0b01000000001 },
    { 11, 12, 11, 0b00101110111 },
    { 11, 13, 11, 0b00101110000 },
    { 11, 14, 11, 0b00101101010 },
    { 11, 15, 8, 0b00000110 },
    { 12, 0, 11, 0b01010001000 },
    { 12, 1, 10, 0b0101000010 },
    { 12, 2, 10, 0b0100111100 },
    { 12, 3, 10, 0b0100111000 },
    { 12, 4, 10, 0b0100110011 },
    { 12, 5, 10, 0b0100101110 },
    { 12, 6, 10, 0b0100100100 },
    { 12, 7, 10, 0b0100011100 },
    { 12, 8, 10, 0b0100001101 },
    { 12, 9, 10, 0b0100000101 },
    { 12, 10, 11, 0b01000000000 },
    { 12, 11, 11, 0b00101111000 },
    { 12, 12, 11, 0b00101110010 },
    { 12, 13, 11, 0b00101101100 },
    { 12, 14, 11, 0b00101100111 },
    { 12, 15, 8, 0b00000100 },
    { 13, 0, 11, 0b01001101100 },
    { 13, 1, 10, 0b0100101100 },
    { 13, 2, 10, 0b0100101000 },
    { 13, 3, 10, 0b0100100110 },
    { 13, 4, 10, 0b0100100000 },
    { 13, 5, 10, 0b0100011010 },
    { 13, 6, 10, 0b0100010001 },
    { 13, 7, 10, 0b0100001010 },
    { 13, 8, 11, 0b01000000011 },
    { 13, 9, 11, 0b00101111100 },
    { 13, 10, 11, 0b00101110110 },
    { 13, 11, 11, 0b00101110001 },
    { 13, 12, 11, 0b00101101101 },
    { 13, 13, 11, 0b00101101001 },
    { 13, 14, 11, 0b00101100101 },
    { 13, 15, 8, 0b00000010 },
    { 14, 0, 12, 0b010000001001 },
    { 14, 1, 10, 0b0100011000 },
    { 14, 2, 10, 0b0100010110 },
    { 14, 3, 10, 0b0100010010 },
    { 14, 4, 10, 0b0100001011 },
    { 14, 5, 10, 0b0100001000 },
    { 14, 6, 10, 0b0100000011 },
    { 14, 7, 11, 0b00101111110 },
    { 14, 8, 11, 0b00101111010 },
    { 14, 9, 11, 0b00101110100 },
    { 14, 10, 11, 0b00101101111 },
    { 14, 11, 11, 0b00101101011 },
    { 14, 12, 11, 0b00101101000 },
    { 14, 13, 11, 0b00101100110 },
    { 14, 14, 11, 0b00101100100 },
    { 14, 15, 8, 0b00000000 },
    { 15, 0, 8, 0b00101011 },
    { 15, 1, 7, 0b0010100 },
    { 15, 2, 7, 0b0010011 },
    { 15, 3, 7, 0b0010001 },
    { 15, 4, 7, 0b0001111 },
    { 15, 5, 7, 0b0001101 },
    { 15, 6, 7, 0b0001011 },
    { 15, 7, 7, 0b0001001 },
    { 15, 8, 7, 0b0000111 },
    { 15, 9, 7, 0b0000110 },
    { 15, 10, 7, 0b0000100 },
    { 15, 11, 8, 0b00000111 },
    { 15, 12, 8, 0b00000101 },
    { 15, 13, 8, 0b00000011 },
    { 15, 14, 8, 0b00000001 },
    { 15, 15, 4, 0b0011 },
};

const int SIZE_HUFFMAN_TABLE_25 = SIZE_HUFFMAN_TABLE_24;
const int LINBITS_HUFFMAN_TABLE_25 = 5;
const HuffmanEntry2* huffman_table_25 = huffman_table_24;

const int SIZE_HUFFMAN_TABLE_26 = SIZE_HUFFMAN_TABLE_24;
const int LINBITS_HUFFMAN_TABLE_26 = 6;
const HuffmanEntry2* huffman_table_26 = huffman_table_24;

const int SIZE_HUFFMAN_TABLE_27 = SIZE_HUFFMAN_TABLE_24;
const int LINBITS_HUFFMAN_TABLE_27 = 7;
const HuffmanEntry2* huffman_table_27 = huffman_table_24;

const int SIZE_HUFFMAN_TABLE_28 = SIZE_HUFFMAN_TABLE_24;
const int LINBITS_HUFFMAN_TABLE_28 = 8;
const HuffmanEntry2* huffman_table_28 = huffman_table_24;

const int SIZE_HUFFMAN_TABLE_29 = SIZE_HUFFMAN_TABLE_24;
const int LINBITS_HUFFMAN_TABLE_29 = 9;
const HuffmanEntry2* huffman_table_29 = huffman_table_24;

const int SIZE_HUFFMAN_TABLE_30 = SIZE_HUFFMAN_TABLE_24;
const int LINBITS_HUFFMAN_TABLE_30 = 11;
const HuffmanEntry2* huffman_table_30 = huffman_table_24;

const int SIZE_HUFFMAN_TABLE_31 = SIZE_HUFFMAN_TABLE_24;
const int LINBITS_HUFFMAN_TABLE_31 = 13;
const HuffmanEntry2* huffman_table_31 = huffman_table_24;

struct HuffmanTable2 {
    const HuffmanEntry2* table;
    const int table_size;
    const int linbits;
};

std::array<HuffmanTable2, 32> HuffmanTables2 = {{
    { huffman_table_0, SIZE_HUFFMAN_TABLE_0, LINBITS_HUFFMAN_TABLE_0 },
    { huffman_table_1, SIZE_HUFFMAN_TABLE_1, LINBITS_HUFFMAN_TABLE_1 },
    { huffman_table_2, SIZE_HUFFMAN_TABLE_2, LINBITS_HUFFMAN_TABLE_2 },
    { huffman_table_3, SIZE_HUFFMAN_TABLE_3, LINBITS_HUFFMAN_TABLE_3 },
    { nullptr, 0, 0 },
    { huffman_table_5, SIZE_HUFFMAN_TABLE_5, LINBITS_HUFFMAN_TABLE_5 },
    { huffman_table_6, SIZE_HUFFMAN_TABLE_6, LINBITS_HUFFMAN_TABLE_6 },
    { huffman_table_7, SIZE_HUFFMAN_TABLE_7, LINBITS_HUFFMAN_TABLE_7 },
    { huffman_table_8, SIZE_HUFFMAN_TABLE_8, LINBITS_HUFFMAN_TABLE_8 },
    { huffman_table_9, SIZE_HUFFMAN_TABLE_9, LINBITS_HUFFMAN_TABLE_9 },
    { huffman_table_10, SIZE_HUFFMAN_TABLE_10, LINBITS_HUFFMAN_TABLE_10 },
    { huffman_table_11, SIZE_HUFFMAN_TABLE_11, LINBITS_HUFFMAN_TABLE_11 },
    { huffman_table_12, SIZE_HUFFMAN_TABLE_12, LINBITS_HUFFMAN_TABLE_12 },
    { huffman_table_13, SIZE_HUFFMAN_TABLE_13, LINBITS_HUFFMAN_TABLE_13 },
    { nullptr, 0, 0 },
    { huffman_table_15, SIZE_HUFFMAN_TABLE_15, LINBITS_HUFFMAN_TABLE_15 },
    { huffman_table_16, SIZE_HUFFMAN_TABLE_16, LINBITS_HUFFMAN_TABLE_16 },
    { huffman_table_17, SIZE_HUFFMAN_TABLE_17, LINBITS_HUFFMAN_TABLE_17 },
    { huffman_table_18, SIZE_HUFFMAN_TABLE_18, LINBITS_HUFFMAN_TABLE_18 },
    { huffman_table_19, SIZE_HUFFMAN_TABLE_19, LINBITS_HUFFMAN_TABLE_19 },
    { huffman_table_20, SIZE_HUFFMAN_TABLE_20, LINBITS_HUFFMAN_TABLE_20 },
    { huffman_table_21, SIZE_HUFFMAN_TABLE_21, LINBITS_HUFFMAN_TABLE_21 },
    { huffman_table_22, SIZE_HUFFMAN_TABLE_22, LINBITS_HUFFMAN_TABLE_22 },
    { huffman_table_23, SIZE_HUFFMAN_TABLE_23, LINBITS_HUFFMAN_TABLE_23 },
    { huffman_table_24, SIZE_HUFFMAN_TABLE_24, LINBITS_HUFFMAN_TABLE_24 },
    { huffman_table_25, SIZE_HUFFMAN_TABLE_25, LINBITS_HUFFMAN_TABLE_25 },
    { huffman_table_26, SIZE_HUFFMAN_TABLE_26, LINBITS_HUFFMAN_TABLE_26 },
    { huffman_table_27, SIZE_HUFFMAN_TABLE_27, LINBITS_HUFFMAN_TABLE_27 },
    { huffman_table_28, SIZE_HUFFMAN_TABLE_28, LINBITS_HUFFMAN_TABLE_28 },
    { huffman_table_29, SIZE_HUFFMAN_TABLE_29, LINBITS_HUFFMAN_TABLE_29 },
    { huffman_table_30, SIZE_HUFFMAN_TABLE_30, LINBITS_HUFFMAN_TABLE_30 },
    { huffman_table_31, SIZE_HUFFMAN_TABLE_31, LINBITS_HUFFMAN_TABLE_31 },
}};

double layer_III_alias_reduction_coeffs[8] = {
    -0.6,
    -0.535,
    -0.33,
    -0.185,
    -0.095,
    -0.041,
    -0.0142,
    -0.0032
};

double layer_III_cs[8] = {
    0.857492925712f,
    0.881741997318f,
    0.949628649103f,
    0.983314592492f,
    0.995517816065f,
    0.999160558175f,
    0.999899195243f,
    0.999993155067f
};

double layer_III_ca[8] = {
    -0.5144957554270f,
    -0.4717319685650f,
    -0.3133774542040f,
    -0.1819131996110f,
    -0.0945741925262f,
    -0.0409655828852f,
    -0.0141985685725f,
    -0.00369997467375f
};

double layer_III_window_0[36] = {
    sin(M_PI / 36 * (0 + 0.5)),
    sin(M_PI / 36 * (1 + 0.5)),
    sin(M_PI / 36 * (2 + 0.5)),
    sin(M_PI / 36 * (3 + 0.5)),
    sin(M_PI / 36 * (4 + 0.5)),
    sin(M_PI / 36 * (5 + 0.5)),
    sin(M_PI / 36 * (6 + 0.5)),
    sin(M_PI / 36 * (7 + 0.5)),
    sin(M_PI / 36 * (8 + 0.5)),
    sin(M_PI / 36 * (9 + 0.5)),
    sin(M_PI / 36 * (10 + 0.5)),
    sin(M_PI / 36 * (11 + 0.5)),
    sin(M_PI / 36 * (12 + 0.5)),
    sin(M_PI / 36 * (13 + 0.5)),
    sin(M_PI / 36 * (14 + 0.5)),
    sin(M_PI / 36 * (15 + 0.5)),
    sin(M_PI / 36 * (16 + 0.5)),
    sin(M_PI / 36 * (17 + 0.5)),
    sin(M_PI / 36 * (18 + 0.5)),
    sin(M_PI / 36 * (19 + 0.5)),
    sin(M_PI / 36 * (20 + 0.5)),
    sin(M_PI / 36 * (21 + 0.5)),
    sin(M_PI / 36 * (22 + 0.5)),
    sin(M_PI / 36 * (23 + 0.5)),
    sin(M_PI / 36 * (24 + 0.5)),
    sin(M_PI / 36 * (25 + 0.5)),
    sin(M_PI / 36 * (26 + 0.5)),
    sin(M_PI / 36 * (27 + 0.5)),
    sin(M_PI / 36 * (28 + 0.5)),
    sin(M_PI / 36 * (29 + 0.5)),
    sin(M_PI / 36 * (30 + 0.5)),
    sin(M_PI / 36 * (31 + 0.5)),
    sin(M_PI / 36 * (32 + 0.5)),
    sin(M_PI / 36 * (33 + 0.5)),
    sin(M_PI / 36 * (34 + 0.5)),
    sin(M_PI / 36 * (35 + 0.5)),
};

double layer_III_window_1[36] = {
    sin(M_PI / 36 * (0 + 0.5)),
    sin(M_PI / 36 * (1 + 0.5)),
    sin(M_PI / 36 * (2 + 0.5)),
    sin(M_PI / 36 * (3 + 0.5)),
    sin(M_PI / 36 * (4 + 0.5)),
    sin(M_PI / 36 * (5 + 0.5)),
    sin(M_PI / 36 * (6 + 0.5)),
    sin(M_PI / 36 * (7 + 0.5)),
    sin(M_PI / 36 * (8 + 0.5)),
    sin(M_PI / 36 * (9 + 0.5)),
    sin(M_PI / 36 * (10 + 0.5)),
    sin(M_PI / 36 * (11 + 0.5)),
    sin(M_PI / 36 * (12 + 0.5)),
    sin(M_PI / 36 * (13 + 0.5)),
    sin(M_PI / 36 * (14 + 0.5)),
    sin(M_PI / 36 * (15 + 0.5)),
    sin(M_PI / 36 * (16 + 0.5)),
    sin(M_PI / 36 * (17 + 0.5)),
    1,
    1,
    1,
    1,
    1,
    1,
    sin(M_PI / 12 * (24 - 18 + 0.5)),
    sin(M_PI / 12 * (25 - 18 + 0.5)),
    sin(M_PI / 12 * (26 - 18 + 0.5)),
    sin(M_PI / 12 * (27 - 18 + 0.5)),
    sin(M_PI / 12 * (28 - 18 + 0.5)),
    sin(M_PI / 12 * (29 - 18 + 0.5)),
    0,
    0,
    0,
    0,
    0,
    0
};

double layer_III_window_2[36] = {
    sin(M_PI / 12 * (0 + 0.5)),
    sin(M_PI / 12 * (1 + 0.5)),
    sin(M_PI / 12 * (2 + 0.5)),
    sin(M_PI / 12 * (3 + 0.5)),
    sin(M_PI / 12 * (4 + 0.5)),
    sin(M_PI / 12 * (5 + 0.5)),
    sin(M_PI / 12 * (6 + 0.5)),
    sin(M_PI / 12 * (7 + 0.5)),
    sin(M_PI / 12 * (8 + 0.5)),
    sin(M_PI / 12 * (9 + 0.5)),
    sin(M_PI / 12 * (10 + 0.5)),
    sin(M_PI / 12 * (11 + 0.5)),
    
    sin(M_PI / 12 * (0 + 0.5)),
    sin(M_PI / 12 * (1 + 0.5)),
    sin(M_PI / 12 * (2 + 0.5)),
    sin(M_PI / 12 * (3 + 0.5)),
    sin(M_PI / 12 * (4 + 0.5)),
    sin(M_PI / 12 * (5 + 0.5)),
    sin(M_PI / 12 * (6 + 0.5)),
    sin(M_PI / 12 * (7 + 0.5)),
    sin(M_PI / 12 * (8 + 0.5)),
    sin(M_PI / 12 * (9 + 0.5)),
    sin(M_PI / 12 * (10 + 0.5)),
    sin(M_PI / 12 * (11 + 0.5)),

    sin(M_PI / 12 * (0 + 0.5)),
    sin(M_PI / 12 * (1 + 0.5)),
    sin(M_PI / 12 * (2 + 0.5)),
    sin(M_PI / 12 * (3 + 0.5)),
    sin(M_PI / 12 * (4 + 0.5)),
    sin(M_PI / 12 * (5 + 0.5)),
    sin(M_PI / 12 * (6 + 0.5)),
    sin(M_PI / 12 * (7 + 0.5)),
    sin(M_PI / 12 * (8 + 0.5)),
    sin(M_PI / 12 * (9 + 0.5)),
    sin(M_PI / 12 * (10 + 0.5)),
    sin(M_PI / 12 * (11 + 0.5)),
};

double layer_III_window_3[36] = {
    0,
    0,
    0,
    0,
    0,
    0,
    sin(M_PI / 12 * (6 - 6 + 0.5)),
    sin(M_PI / 12 * (7 - 6 + 0.5)),
    sin(M_PI / 12 * (8 - 6 + 0.5)),
    sin(M_PI / 12 * (9 - 6 + 0.5)),
    sin(M_PI / 12 * (10 - 6 + 0.5)),
    sin(M_PI / 12 * (11 - 6 + 0.5)),
    1,
    1,
    1,
    1,
    1,
    1,
    sin(M_PI / 36 * (18 + 0.5)),
    sin(M_PI / 36 * (19 + 0.5)),
    sin(M_PI / 36 * (20 + 0.5)),
    sin(M_PI / 36 * (21 + 0.5)),
    sin(M_PI / 36 * (22 + 0.5)),
    sin(M_PI / 36 * (23 + 0.5)),
    sin(M_PI / 36 * (24 + 0.5)),
    sin(M_PI / 36 * (25 + 0.5)),
    sin(M_PI / 36 * (26 + 0.5)),
    sin(M_PI / 36 * (27 + 0.5)),
    sin(M_PI / 36 * (28 + 0.5)),
    sin(M_PI / 36 * (29 + 0.5)),
    sin(M_PI / 36 * (30 + 0.5)),
    sin(M_PI / 36 * (31 + 0.5)),
    sin(M_PI / 36 * (32 + 0.5)),
    sin(M_PI / 36 * (33 + 0.5)),
    sin(M_PI / 36 * (34 + 0.5)),
    sin(M_PI / 36 * (35 + 0.5))
};